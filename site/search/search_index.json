{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inuyasha\u7684\u6280\u672f\u535a\u5ba2","text":"<p>\u8fd9\u91cc\u662fInuyasha\u7684\u6280\u672f\u535a\u5ba2\uff0c\u7528\u6765\u8bb0\u5f55\u4e0e\u5206\u4eabLLM\u7b97\u6cd5&amp;\u5e94\u7528\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u5de5\u7a0b\u95ee\u9898\u548c\u6280\u672f\u65b9\u6848</p>"},{"location":"eval_agent/","title":"Eval Agent","text":"LLM\u89e3\u9898 <pre><code>prompt_template = '''\n\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u4ee5\u4e0b\u6570\u5b66\u95ee\u9898\uff0c\u5e76\u6309\u7167\u6b65\u9aa4\u8fdb\u884c\u601d\u8003\u548c\u89e3\u7b54\uff1a\n\n\u95ee\u9898\uff1a{pos1}\n\n\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\u601d\u8003\uff1a\n\n1. \u7406\u89e3\u95ee\u9898\uff1a\n   - \u4ed4\u7ec6\u9605\u8bfb\u9898\u76ee\uff0c\u786e\u5b9a\u5df2\u77e5\u6761\u4ef6\u548c\u9700\u8981\u8bc1\u660e\u6216\u8ba1\u7b97\u7684\u5185\u5bb9\u3002\n   - \u8bc6\u522b\u9898\u76ee\u4e2d\u7684\u5173\u952e\u6570\u5b66\u6982\u5ff5\u548c\u7b26\u53f7\u3002\n\n2. \u5206\u6790\u95ee\u9898\uff1a\n   - \u8003\u8651\u53ef\u80fd\u9002\u7528\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u6570\u5b66\u5b9a\u7406\u6216\u516c\u5f0f\u3002\n   - \u601d\u8003\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u53ef\u80fd\u9700\u8981\u7684\u6570\u5b66\u6280\u5de7\u6216\u65b9\u6cd5\u3002\n\n3. \u5236\u5b9a\u89e3\u9898\u7b56\u7565\uff1a\n   - \u6839\u636e\u95ee\u9898\u7684\u6027\u8d28\uff0c\u51b3\u5b9a\u4f7f\u7528\u76f4\u63a5\u8bc1\u660e\u3001\u53cd\u8bc1\u6cd5\u3001\u6570\u5b66\u5f52\u7eb3\u6cd5\u7b49\u65b9\u6cd5\u3002\n   - \u5982\u679c\u662f\u8ba1\u7b97\u95ee\u9898\uff0c\u8003\u8651\u6700\u9002\u5408\u7684\u8ba1\u7b97\u65b9\u6cd5\u3002\n\n4. \u9010\u6b65\u89e3\u7b54\uff1a\n   - \u6309\u7167\u903b\u8f91\u987a\u5e8f\uff0c\u4e00\u6b65\u4e00\u6b65\u5730\u63a8\u5bfc\u6216\u8ba1\u7b97\u3002\n   - \u786e\u4fdd\u6bcf\u4e00\u6b65\u90fd\u6709\u6e05\u6670\u7684\u7406\u7531\u548c\u4f9d\u636e\u3002\n\n5. \u68c0\u67e5\u7ed3\u679c\uff1a\n   - \u9a8c\u8bc1\u4f60\u7684\u89e3\u7b54\u662f\u5426\u6ee1\u8db3\u9898\u76ee\u7684\u6240\u6709\u6761\u4ef6\u3002\n   - \u68c0\u67e5\u8ba1\u7b97\u548c\u63a8\u7406\u8fc7\u7a0b\u662f\u5426\u5b58\u5728\u9519\u8bef\u3002\n\n6. \u603b\u7ed3\u7b54\u6848\uff1a\n   - \u7b80\u660e\u627c\u8981\u5730\u603b\u7ed3\u6700\u7ec8\u7684\u7ed3\u8bba\u6216\u7b54\u6848\u3002\n\n\u8bf7\u5728\u5b8c\u6210\u4ee5\u4e0a\u601d\u8003\u6b65\u9aa4\u540e\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u6a21\u677f\u683c\u5f0f\u63d0\u4f9b\u4f60\u7684\u6700\u7ec8\u7b54\u6848\uff1a\n\n{data_template}\n\n\u6ce8\u610f\uff1a\u53ea\u9700\u5728\u7b54\u6848\u90e8\u5206\u586b\u5199\u4f60\u7684\u6700\u7ec8\u7ed3\u8bba\u6216\u8ba1\u7b97\u7ed3\u679c\uff0c\u4e0d\u9700\u8981\u5305\u542b\u8be6\u7ec6\u7684\u89e3\u9898\u8fc7\u7a0b\u3002\u8bf7\u786e\u4fdd\u4f60\u7684\u7b54\u6848\u7b80\u6d01\u660e\u4e86\uff0c\u76f4\u63a5\u56de\u7b54\u95ee\u9898\u7684\u6838\u5fc3\u5185\u5bb9\u3002\n'''\n\ndata_template='''\n\u6211\u4eec\u8981\u6c42\u4f60\u5fc5\u987b\u4f7f\u7528=start_pad=\u548c=end_pad=\u6765\u5305\u88f9\u4f60\u6700\u7ec8\u7684\u7b54\u6848\uff0c\u5373\u5982\u4e0b\u5f62\u5f0f\n\n    =start_pad= .... =end_pad=\n'''\n</code></pre> <pre><code>pos1 input_mathematical_problem\n</code></pre> \u7b54\u6848\u6b63\u786e\u6027\u5224\u65ad <pre><code>prompt_template = '''\n\u4f60\u662f\u4e00\u4e2a\u51c6\u786e\u7684\u5224\u5377\u8005\n\u5b66\u751f\u7684\u7b54\u6848\u662f {pos1} \n\n\u6807\u51c6\u7b54\u6848\u662f {pos2}\n\n\u8bf7\u4f60\u6307\u51fa\u4e24\u8005\u662f\u5426\u4e00\u81f4\uff0c\u4ee5{pos2}\u4e3a\u51c6\n\n\u76f4\u63a5\u4ee5\u5982\u4e0b\u683c\u5f0f\u8fd4\u56de\uff0c\u65e0\u9700\u89e3\u91ca\n\n{data_template}\n\n\u5982\u6b63\u786e\uff0c\u5199True\uff0c\u5982\u9519\u8bef\uff0c\u5199False\uff0c\u5982\u6beb\u4e0d\u76f8\u5173\u6216\u80e1\u8a00\u4e71\u8bed\uff0c\u4e5f\u5199False\n'''\n\ndata_template='''\n{'Res':True/False}\n'''\n</code></pre> <pre><code>pos1 student_answer\npos2 standard_answer\n</code></pre>"},{"location":"lean_agent/","title":"1. \u5404\u4e2a\u5904\u7406\u73af\u8282\u7684\u63d0\u793a\u8bcd\u6574\u7406","text":""},{"location":"lean_agent/#11","title":"1.1 \u91c7\u6837\u4e0e\u751f\u6210","text":"\u751f\u6210\u6570\u5b66\u5b66\u79d1\u6811 <pre><code>prompt = f'''As a mathematics expert, focus exclusively on generating precise and specific subfields within pure and applied mathematics for the field of \"{node_name}\". \nConsider the following context: {node_field_info}\n\nGuidelines:\n1. Provide 3-5 direct subfields that are strictly within mathematics.\n2. Ensure each subfield is more specific and narrower than \"{node_name}\".\n3. Avoid any cross-disciplinary fields or applications outside of mathematics.\n4. Focus on established mathematical concepts, not speculative or emerging ideas.\n5. If a subfield seems too broad, break it down further into more specific areas.\n\nRespond strictly in the following JSON format:\n{data_template}\n\nEnsure each subfield name is concise yet descriptive, using standard mathematical terminology.'''\n\ndata_template = \"{'child1': 'subfield_name1', 'child2': 'subfield_name2', ...}\"\n</code></pre> <pre><code>- node_name:\u5f53\u524d\u6570\u5b66\u9886\u57df\u8282\u70b9\u540d\u79f0\n- node_field_info:\u5f53\u524d\u6570\u5b66\u9886\u57df\u7684\u76f8\u5173\u4fe1\u606f\n</code></pre> \u81ea\u7136\u8bed\u8a00\u547d\u9898\u751f\u6210\u6bcd\u7248 <pre><code>prompt_meta_template = '''\nPlease generate a random mathematical statement or theorem expressed in natural language. This statement or theorem should come from the following mathematical fields:\n\n{math_field}\n\nPlease express it in clear, easy-to-understand natural language, avoiding excessive use of mathematical symbols. The generated content can be a basic concept or a more advanced theorem. Ensure that the statement is clear and comprehensible.\n\nPlease output this randomly generated mathematical statement in the following format:\n\n{data_template}\n'''\n</code></pre> <pre><code>math_field input_mathematical_fields\ndata_template output_format_template\n</code></pre> \u81ea\u7136\u8bed\u8a00\u7ffb\u8bd1\u4e3aLean4 <pre><code>prompt_template02 = '''\nGiven the natural language math statement {pos1}, translate it into Lean 4 theorem syntax. Please follow this data template:\n\n{data_template}\n\nOnly provide the theorem statement without the proof. Use the appropriate Unicode symbols for mathematical notation where applicable.\n\nExamples:\n\n1. Natural language: If $r$ is rational $(r \\neq 0)$ and $x$ is irrational, prove that $r+x$ is irrational.\n   {{\"lean_statement\": \"theorem exercise_1_1a (x : \u211d) (y : \u211a) : (irrational x) -&gt; irrational (x + y) :=\"}}\n\n2. Natural language: Prove that there is no rational number whose square is $12$.\n   {{\"lean_statement\": \"theorem exercise_1_2 : \u00ac \u2203 (x : \u211a), (x ^ 2 = 12) :=\"}}\n\n3. Natural language: Let $A$ be a nonempty set of real numbers which is bounded below. Let $-A$ be the set of all numbers $-x$, where $x \\in A$. Prove that $\\inf A=-\\sup (-A)$.\n   {{\"lean_statement\": \"theorem exercise_1_5 (A minus_A : set \u211d) (hA : A.nonempty) (hA_bdd_below : bdd_below A) (hminus_A : minus_A = {{x | -x \u2208 A}}) : Inf A = Sup minus_A :=\"}}\n\n4. Natural language: If $z$ is a complex number, prove that there exists an $r\\geq 0$ and a complex number $w$ with $| w | = 1$ such that $z = rw$.\n   {{\"lean_statement\": \"theorem exercise_1_11a (z : \u2102) : \u2203 (r : \u211d) (w : \u2102), abs w = 1 \u2227 z = r * w :=\"}}\n################################################################\nNow, please translate the following statement into Lean 4:\n\n{pos1}\n'''\n\ndata_template02='''\n    {\"lean_statement\":translated_lean_statement_str_here}\n'''\n</code></pre> <pre><code>pos1:input_natural_language_statement\n</code></pre> Lean\u8bed\u53e5\u7ffb\u8bd1\u4e3a\u81ea\u7136\u8bed\u8a00 <pre><code>prompt_template ='''\n    Here is a Lean statement: {pos1}.\n    I want you to translate it into natural language and output it in the following format:\n    {data_template}\n'''\n\ndata_template='''\n    {\"lean\":lean_str_here,\"natural_language\":nl_translation_here}\n'''\n</code></pre> <pre><code>pos1:input_lean_statement\n</code></pre>"},{"location":"lean_agent/#12","title":"1.2 \u540e\u5904\u7406\u9636\u6bb5","text":"Lean-NL\u547d\u9898\u5bf9\u5b66\u79d1\u5f52\u7c7b <pre><code>prompt_template = '''\n\u6211\u4eec\u8bd5\u56fe\u91cd\u6784\u4e00\u4e2a\u7531lean4\u5f62\u5f0f\u5316\u8bed\u53e5\u548c\u81ea\u7136\u8bed\u53e5\u6240\u5171\u540c\u8868\u8ff0\u7684\u6570\u5b66\u547d\u9898\u7684\u6570\u5b66\u9886\u57df\u7ed3\u6784\uff0c\u4f60\u9700\u8981\u7ed9\u6211\u8fd9\u4e2a\u6570\u5b66\u547d\u9898\u7684\u5c42\u7ea7\u548c\u5177\u4f53\u7684\u8def\u5f84\n\u6211\u4eec\u63d0\u4f9b\u4e0b\u9762\u7684\u4e00\u4e9b\u4f8b\u5b50\n  \u5047\u5982\u5bf9\u8c61\u88ab\u5f52\u5165\"Mathematics / Number Theory / Diophantine Equations / Higher-Degree Diophantine Equations / Quintic Diophantine Equations / Quintic Diophantine Equations with Rational Coefficients / Symmetry and Group Theory in Quintic Diophantine Equations with Rational Coefficients\",\n    \u4ed6\u662f\u4e00\u4e2a6\u5c42\u7ed3\u6784\uff0c\u56e0\u4e3a\u4ed6\u4eceMathematics\u7684\u8282\u70b9\u5f80\u4e0b\u6cbf\u751f\u4e866\u5c42\uff0c\n    \u6837\u4f8b\u8f93\u51fa\uff1a{{\"math_depth\": 6,\n    \"math_field_path\":\"Mathematics / Number Theory / Diophantine Equations / Higher-Degree Diophantine Equations / Quintic Diophantine Equations / Quintic Diophantine Equations with Rational Coefficients / Symmetry and Group Theory in Quintic Diophantine Equations with Rational Coefficients\"}}\n    \u5047\u5982\u5bf9\u8c61\u88ab\u5f52\u5165\"Mathematics / Combinatorics / Graph Theory / Graph Decompositions / Star Decompositions\"\n    \u90a3\u4e48\u5176\u6df1\u5ea6\u4e3a4\n    \u6837\u4f8b\u8f93\u51fa\uff1a{{\"math_depth\": 4,\n    \"math_field_path\":\"Mathematics / Combinatorics / Graph Theory / Graph Decompositions / Star Decompositions\"}}\n####################################################\n   \u73b0\u5728\u8bf7\u4f60\u5ffd\u7565\u4ee5\u4e0a\u7684\u793a\u4f8b\u7684\u5185\u5bb9:\n   {data_template}\n   \u751f\u6210\u4ee5\u4e0b\u547d\u9898\u7684\u5206\u6790\n   lean4\u683c\u5f0f\uff1a{pos1}\n   \u81ea\u7136\u8bed\u8a00\u683c\u5f0f:{pos2}\n'''\n\ndata_template='''\n    {\"math_depth\": math_depth_int,\n    \"math_field_path\":field_path_str}\n'''\n</code></pre> <pre><code>pos1 input_lean_statement \n\npos2 input_natural_language_statement \n</code></pre> Lean-NL\u547d\u9898\u7684\u5b50\u547d\u9898\u786e\u5b9a <pre><code>prompt_template = '''\n\u6211\u4eec\u6b63\u5728\u6df1\u5165\u7814\u7a76\u6570\u5b66\u547d\u9898\u7684\u5f62\u5f0f\u5316\u8868\u8ff0\u3002\u6211\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u6570\u5b66\u547d\u9898\uff0c\u5305\u62ec\u5b83\u7684\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u548cLean4\u5f62\u5f0f\u5316\u8868\u8ff0\u3002\u4f60\u7684\u4efb\u52a1\u662f\u8bc6\u522b\u5e76\u5f62\u5f0f\u5316\u8fd9\u4e2a\u547d\u9898\u76f4\u63a5\u4f9d\u8d56\u7684\u5b50\u547d\u9898\u6216\u57fa\u7840\u6982\u5ff5\u3002\n\n\u8bf7\u6309\u7167\u4ee5\u4e0b\u683c\u5f0f\u63d0\u4f9b\u4f60\u7684\u5206\u6790\uff1a\n\n{data_template}\n\n\u6ce8\u610f\uff0c\u6211\u4eec\u5f3a\u70c8\u8981\u6c42lean_str\u7684\u683c\u5f0f\u9075\u5faa\u7740:\nimport Mathlib\\nmain_content:=by sorry\n\u7684\u683c\u5f0f\u4ee5\u4fbf\u4e8e\u6211\u4eec\u4e4b\u540e\u7684\u9a8c\u8bc1\uff0c\u5982\u679c\u4ed6\u4e0d\u662f\u53ef\u4ee5\u63a5:=by sorry\u7684Lean4\u6982\u5ff5\uff0c\u4e5f\u8bf7\u4f60\u4f7f\u5176\u81ea\u6d3d\n\n\u4e0d\u8bb8\u63d0\u4f9bvariables \u4e0d\u9700\u8981\u989d\u5916\u7684\u89e3\u91ca\n\n\u73b0\u5728\uff0c\u8bf7\u5206\u6790\u4ee5\u4e0b\u547d\u9898\uff1a\n\nLean4\u5f62\u5f0f\u5316\uff1a\n{pos1}\n\n\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\uff1a\n{pos2}\n\n\u8bf7\u5b8c\u6210\u4ee5\u4e0b\u4efb\u52a1\uff1a\n1. \u8bc6\u522b\u8fd9\u4e2a\u547d\u9898\u76f4\u63a5\u4f9d\u8d56\u7684\u82e5\u5e72\u4e2a\u5173\u952e\u5b50\u547d\u9898\u6216\u57fa\u7840\u6982\u5ff5\u3002\n2. \u4e3a\u6bcf\u4e2a\u8bc6\u522b\u51fa\u7684\u5b50\u547d\u9898\u6216\u6982\u5ff5\u63d0\u4f9bLean4\u5f62\u5f0f\u5316\u8868\u8ff0\u3002\n3. \u7b80\u8981\u89e3\u91ca\u6bcf\u4e2a\u5b50\u547d\u9898\u6216\u6982\u5ff5\u4e0e\u4e3b\u547d\u9898\u7684\u5173\u7cfb\u3002\n4. \u5982\u679c\u53ef\u80fd\uff0c\u6307\u51fa\u8fd9\u4e9b\u5b50\u547d\u9898\u6216\u6982\u5ff5\u5728\u8bc1\u660e\u6216\u6784\u5efa\u4e3b\u547d\u9898\u65f6\u7684\u4f5c\u7528\u3002\n\n\u6ce8\u610f\uff1afocus\u5728\u76f4\u63a5\u76f8\u5173\u7684\u3001\u6784\u6210\u4e3b\u547d\u9898\u57fa\u7840\u7684\u5143\u7d20\u4e0a\uff0c\u800c\u4e0d\u662f\u66f4\u5e7f\u6cdb\u7684\u76f8\u5173\u6982\u5ff5\u3002\n'''\n\ndata_template='''\n    {\"statement_1\":{\"lean_statement\": lean_str,\n    \"natural_language_statement\":nl_str},...,\n    \"statement_n\":{\"lean_statement\": lean_str,\n    \"natural_language_statement\":nl_str}\n'''\n</code></pre> <pre><code>pos1 input_lean_statement\npos2 input_natural_language_description\n</code></pre>"},{"location":"Lean4/Lean4_Python/","title":"\u540cpython\u5bf9\u7167\u7684lean4\u6559\u7a0b","text":"<pre><code>def bubble_sort(arr):\n    n = len(arr)\n\n    # \u904d\u5386\u6240\u6709\u6570\u7ec4\u5143\u7d20\n    for i in range(n):\n        # Last i elements are already in place\n        for j in range(0, n-i-1):\n            # \u904d\u5386\u6570\u7ec4\u4ece0\u5230n-i-1\n            # \u5982\u679c\u53d1\u73b0\u524d\u4e00\u4e2a\u5143\u7d20\u6bd4\u540e\u4e00\u4e2a\u5143\u7d20\u5927\uff0c\u5219\u4ea4\u6362\u5b83\u4eec\n            if arr[j] &gt; arr[j+1]:\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n    return arr\n\n# \u6d4b\u8bd5\u4ee3\u7801\nif __name__ == \"__main__\":\n    test_array = [64, 34, 25, 12, 22, 11, 90]\n    print(\"\u539f\u59cb\u6570\u7ec4:\", test_array)\n\n    sorted_array = bubble_sort(test_array)\n    print(\"\u6392\u5e8f\u540e\u6570\u7ec4:\", sorted_array)\n</code></pre> <pre><code>import Std \n\ndef bubbleSort {\u03b1 : Type} [Inhabited \u03b1] [Ord \u03b1] (arr : Array \u03b1) : Array \u03b1 :=\n  let rec bubble : Nat \u2192 Array \u03b1 \u2192 Array \u03b1\n    | 0, arr =&gt; arr\n    | n+1, arr =&gt;\n      let rec pass : Nat \u2192 Array \u03b1 \u2192 Array \u03b1\n        | 0, arr =&gt; arr\n        | i+1, arr =&gt;\n          if i &lt; arr.size &amp;&amp; compare arr[i-1]! arr[i]! == Ordering.gt then\n            pass i (arr.swap! (i-1) i)\n          else\n            pass i arr\n      bubble n (pass arr.size arr)\n\n  bubble arr.size arr\n\n#eval bubbleSort #[5, 2, 8, 12, 1, 6]\n</code></pre>"},{"location":"Lean4/Lean4_Python/#lean-4-ord","title":"\u5728 Lean 4 \u4e2d\u4f7f\u7528 <code>Ord</code> \u7c7b\u578b\u7c7b\u8fdb\u884c\u6bd4\u8f83","text":"<p>\u5728 Lean 4 \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>Ord</code> \u7c7b\u578b\u7c7b\u7684 <code>compare</code> \u51fd\u6570\u6765\u6bd4\u8f83\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4ee5\u4e0b\u7c7b\u578b\uff1a</p>"},{"location":"Lean4/Lean4_Python/#1","title":"1. \u57fa\u672c\u6570\u503c\u7c7b\u578b","text":"<ul> <li>\u6574\u6570\u7c7b\u578b\uff08\u5982 <code>Nat</code>\u3001<code>Int</code>\u3001<code>UInt64</code> \u7b49\uff09</li> <li>\u6d6e\u70b9\u6570\u7c7b\u578b\uff08\u5982 <code>Float</code>\uff09</li> </ul> <p>\u5728\u8fdb\u884c\u8de8\u7c7b\u578b\u6bd4\u8f83\u65f6\uff0c\u901a\u5e38\u9700\u8981\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5927\u81f4\u7684\u65e0\u635f\u8f6c\u6362\u987a\u5e8f\u8868\uff0c\u4ece\"\u5c0f\"\u7c7b\u578b\u5230\"\u5927\"\u7c7b\u578b\uff1a</p> <ol> <li><code>Nat</code> (\u81ea\u7136\u6570)</li> <li><code>UInt8</code></li> <li><code>UInt16</code></li> <li><code>UInt32</code></li> <li><code>UInt64</code></li> <li><code>Int8</code></li> <li><code>Int16</code></li> <li><code>Int32</code></li> <li><code>Int64</code></li> <li><code>Int</code> (\u4efb\u610f\u7cbe\u5ea6\u6574\u6570)</li> <li><code>Float</code> (\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570)</li> <li><code>Double</code> (\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570)</li> </ol>"},{"location":"Lean4/Lean4_Python/#_1","title":"\u8f6c\u6362\u987a\u5e8f\u539f\u5219","text":"<ol> <li>**\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b**\u6309\u4f4d\u6570\u6392\u5e8f\u3002</li> <li>**\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b**\u6309\u4f4d\u6570\u6392\u5e8f\uff0c\u901a\u5e38\u4f4d\u4e8e\u540c\u4f4d\u6570\u7684\u65e0\u7b26\u53f7\u7c7b\u578b\u4e4b\u540e\u3002</li> <li><code>Int</code> (\u4efb\u610f\u7cbe\u5ea6\u6574\u6570) \u53ef\u4ee5\u65e0\u635f\u5730\u8868\u793a\u6240\u6709\u56fa\u5b9a\u4f4d\u6570\u7684\u6574\u6570\u7c7b\u578b\u3002</li> <li>\u6d6e\u70b9\u6570\u7c7b\u578b\u4f4d\u4e8e\u6574\u6570\u7c7b\u578b\u4e4b\u540e\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u8868\u793a\u5c0f\u6570\u3002</li> <li><code>Double</code> \u6bd4 <code>Float</code> \u6709\u66f4\u5927\u7684\u8303\u56f4\u548c\u7cbe\u5ea6\u3002</li> </ol> <p>\u5728\u8fdb\u884c\u8de8\u7c7b\u578b\u6bd4\u8f83\u65f6\uff0c\u901a\u5e38\u5e94\u8be5\u5c06\"\u5c0f\"\u7c7b\u578b\u8f6c\u6362\u4e3a\"\u5927\"\u7c7b\u578b\u4ee5\u907f\u514d\u4fe1\u606f\u4e22\u5931\u3002\u4f8b\u5982\uff1a</p> <ul> <li>\u6bd4\u8f83 <code>Nat</code> \u548c <code>Int</code>\uff1a\u5c06 <code>Nat</code> \u8f6c\u6362\u4e3a <code>Int</code></li> <li>\u6bd4\u8f83 <code>Int32</code> \u548c <code>Int64</code>\uff1a\u5c06 <code>Int32</code> \u8f6c\u6362\u4e3a <code>Int64</code></li> <li>\u6bd4\u8f83\u4efb\u4f55\u6574\u6570\u7c7b\u578b\u548c <code>Float</code>\uff1a\u5c06\u6574\u6570\u8f6c\u6362\u4e3a <code>Float</code></li> </ul>"},{"location":"Lean4/Lean4_Python/#_2","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u867d\u7136\u8fd9\u4e2a\u987a\u5e8f\u8868\u793a\u4e86\u65e0\u635f\u8f6c\u6362\u7684\u4e00\u822c\u8def\u5f84\uff0c\u4f46\u5e76\u975e\u6240\u6709\u76f8\u90bb\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362\u90fd\u662f\u65e0\u635f\u7684\u3002\u4f8b\u5982\uff0c\u67d0\u4e9b\u5927\u7684 <code>UInt64</code> \u503c\u8f6c\u6362\u4e3a <code>Int64</code> \u65f6\u53ef\u80fd\u4f1a\u6ea2\u51fa\u3002</li> <li>\u6d6e\u70b9\u6570\u867d\u7136\u5728\u5217\u8868\u672b\u5c3e\uff0c\u4f46\u5b83\u4eec\u4e0d\u80fd\u7cbe\u786e\u8868\u793a\u6240\u6709\u6574\u6570\u3002\u5927\u6574\u6570\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u53ef\u80fd\u4f1a\u635f\u5931\u7cbe\u5ea6\u3002</li> <li>\u5728\u5b9e\u9645\u7f16\u7a0b\u4e2d\uff0cLean \u7684\u7c7b\u578b\u7cfb\u7edf\u4f1a\u9632\u6b62\u8bb8\u591a\u9690\u5f0f\u7684\u4e0d\u5b89\u5168\u8f6c\u6362\uff0c\u4f60\u901a\u5e38\u9700\u8981\u663e\u5f0f\u5730\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002</li> <li>\u5bf9\u4e8e\u7279\u5b9a\u7684\u5e94\u7528\u573a\u666f\uff0c\u53ef\u80fd\u9700\u8981\u6839\u636e\u5177\u4f53\u9700\u6c42\u8c03\u6574\u8fd9\u4e2a\u987a\u5e8f\u6216\u9009\u62e9\u5408\u9002\u7684\u8f6c\u6362\u7b56\u7565\u3002</li> </ol>"},{"location":"Lean4/Lean4_Python/#2","title":"2. \u5b57\u7b26\u548c\u5b57\u7b26\u4e32","text":"<ul> <li><code>Char</code></li> <li><code>String</code></li> </ul> <p>\u5728\u5b57\u7b26\u4e32\u7684\u504f\u5e8f\u5173\u7cfb\u4e2d\uff0c<code>\"a\" &lt; \"b\"</code>\u3002</p>"},{"location":"Lean4/Lean4_Python/#3","title":"3. \u5e03\u5c14\u503c","text":"<ul> <li><code>Bool</code></li> </ul> <p>\u5728\u5e03\u5c14\u503c\u7684\u504f\u5e8f\u5173\u7cfb\u4e2d\uff0c<code>false &lt; true</code>\u3002</p>"},{"location":"Lean4/Lean4_Python/#4","title":"4. \u590d\u5408\u7c7b\u578b","text":"<ul> <li>\u5143\u7ec4 (Tuples)</li> <li>\u5217\u8868 (Lists)</li> <li>\u6570\u7ec4 (Arrays)</li> </ul>"},{"location":"Lean4/Lean4_Python/#_3","title":"\u5e8f\u5217\u7c7b\u578b\u7684\u901a\u7528\u504f\u5e8f\u5173\u7cfb","text":"<p>\u5bf9\u4e8e\u4efb\u4f55\u5e8f\u5217\u7c7b\u578b <code>S</code>\uff08\u5982\u5143\u7ec4\u3001\u5217\u8868\u3001\u6570\u7ec4\u7b49\uff09\uff0c\u5176\u4e2d\u5305\u542b\u5143\u7d20\u7c7b\u578b <code>T</code>\uff08<code>T</code> \u5b9e\u73b0\u4e86 <code>Ord</code> \u7c7b\u578b\u7c7b\uff09\uff0c\u5b9a\u4e49\u504f\u5e8f\u5173\u7cfb <code>\u2264</code> \u5982\u4e0b\uff1a</p> <ol> <li>\u7a7a\u5e8f\u5217\uff1a</li> <li> <p>\u7a7a\u5e8f\u5217 <code>\u2264</code> \u4efb\u4f55\u5e8f\u5217</p> </li> <li> <p>\u975e\u7a7a\u5e8f\u5217\uff1a</p> </li> <li> <p>\u5bf9\u4e8e\u975e\u7a7a\u5e8f\u5217 <code>a = (a\u2081, a\u2082, ..., a\u2099)</code> \u548c <code>b = (b\u2081, b\u2082, ..., b\u2098)</code>\uff0c<code>a \u2264 b</code> \u5f53\u4e14\u4ec5\u5f53\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u4e4b\u4e00\uff1a</p> <ul> <li><code>a\u2081 &lt; b\u2081</code></li> <li><code>a\u2081 = b\u2081</code> \u4e14 <code>(a\u2082, ..., a\u2099) \u2264 (b\u2082, ..., b\u2098)</code></li> </ul> </li> <li> <p>\u5e8f\u5217\u957f\u5ea6\uff1a</p> </li> <li> <p>\u5982\u679c <code>a</code> \u662f <code>b</code> \u7684\u771f\u524d\u7f00\uff0c\u5219 <code>a &lt; b</code></p> </li> <li> <p>\u76f8\u7b49\u6027\uff1a</p> </li> <li><code>a = b</code> \u5f53\u4e14\u4ec5\u5f53 <code>n = m</code> \u4e14\u5bf9\u6240\u6709 <code>i</code>\uff0c<code>a\u1d62 = b\u1d62</code></li> </ol>"},{"location":"Lean4/Lean4_Python/#_4","title":"\u7279\u6027","text":"<ol> <li>\u9012\u5f52\u6027\uff1a\u8fd9\u4e2a\u5b9a\u4e49\u662f\u9012\u5f52\u7684\uff0c\u57fa\u4e8e\u5143\u7d20\u7684\u6bd4\u8f83\u9010\u6b65\u6784\u5efa\u6574\u4e2a\u5e8f\u5217\u7684\u6bd4\u8f83\u3002</li> <li>\u5b57\u5178\u5e8f\uff1a\u8fd9\u79cd\u6392\u5e8f\u65b9\u5f0f\u672c\u8d28\u4e0a\u662f\u5b57\u5178\u5e8f\uff08lexicographical order\uff09\u3002</li> <li>\u524d\u7f00\u5173\u7cfb\uff1a\u8f83\u77ed\u7684\u5e8f\u5217\u5982\u679c\u662f\u8f83\u957f\u5e8f\u5217\u7684\u524d\u7f00\uff0c\u5219\u88ab\u89c6\u4e3a\u8f83\u5c0f\u3002</li> <li>\u7c7b\u578b\u4e00\u81f4\u6027\uff1a\u8981\u6c42\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\u7c7b\u578b\u90fd\u5b9e\u73b0\u4e86 <code>Ord</code> \u7c7b\u578b\u7c7b\u3002</li> <li>\u4f20\u9012\u6027\uff1a\u5982\u679c <code>a \u2264 b</code> \u4e14 <code>b \u2264 c</code>\uff0c\u5219 <code>a \u2264 c</code>\u3002</li> <li>\u53cd\u5bf9\u79f0\u6027\uff1a\u5982\u679c <code>a \u2264 b</code> \u4e14 <code>b \u2264 a</code>\uff0c\u5219 <code>a = b</code>\u3002</li> <li>\u5b8c\u5168\u6027\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u5e8f\u5217 <code>a</code> \u548c <code>b</code>\uff0c\u8981\u4e48 <code>a \u2264 b</code>\uff0c\u8981\u4e48 <code>b \u2264 a</code>\u3002</li> </ol>"},{"location":"Lean4/Lean4_Python/#5","title":"5. \u53ef\u9009\u7c7b\u578b","text":"<ul> <li><code>Option \u03b1</code>\uff0c\u5176\u4e2d <code>\u03b1</code> \u662f\u4efb\u4f55\u53ef\u6bd4\u8f83\u7684\u7c7b\u578b</li> </ul> <p><code>Option \u03b1</code> \u662f\u4e00\u4e2a\u8868\u793a\u53ef\u80fd\u5b58\u5728\u6216\u4e0d\u5b58\u5728\u503c\u7684\u7c7b\u578b\u3002\u5b83\u6709\u4e24\u4e2a\u6784\u9020\u5668\uff1a</p> <ul> <li><code>none</code>\uff1a\u8868\u793a\u6ca1\u6709\u503c</li> <li><code>some a</code>\uff1a\u8868\u793a\u5b58\u5728\u4e00\u4e2a\u7c7b\u578b\u4e3a <code>\u03b1</code> \u7684\u503c <code>a</code></li> </ul>"},{"location":"Lean4/Lean4_Python/#_5","title":"\u6bd4\u8f83\u89c4\u5219","text":"<ul> <li><code>none</code> \u88ab\u8ba4\u4e3a\u5c0f\u4e8e\u4efb\u4f55 <code>some</code> \u503c</li> <li>\u4e24\u4e2a <code>some</code> \u503c\u7684\u6bd4\u8f83\u53d6\u51b3\u4e8e\u5b83\u4eec\u5305\u542b\u7684\u503c\u7684\u6bd4\u8f83</li> </ul>"},{"location":"Lean4/Lean4_Python/#_6","title":"\u4f8b\u5b50","text":"<pre><code>#eval compare (Option.none : Option Nat) (Option.some 5)  -- \u7ed3\u679c: Ordering.lt\n#eval compare (Option.some 3) (Option.some 5)             -- \u7ed3\u679c: Ordering.lt\n#eval compare (Option.some 5) (Option.some 5)             -- \u7ed3\u679c: Ordering.eq\n</code></pre>"},{"location":"Lean4/Lean4_Python/#6","title":"6. \u7ed3\u679c\u7c7b\u578b","text":"<ul> <li><code>Result \u03b5 \u03b1</code>\uff0c\u5176\u4e2d <code>\u03b5</code> \u548c <code>\u03b1</code> \u90fd\u662f\u53ef\u6bd4\u8f83\u7684\u7c7b\u578b</li> </ul> <p><code>Result \u03b5 \u03b1</code> \u662f\u4e00\u4e2a\u8868\u793a\u53ef\u80fd\u6210\u529f\u6216\u5931\u8d25\u7684\u64cd\u4f5c\u7ed3\u679c\u7684\u7c7b\u578b\u3002\u5b83\u6709\u4e24\u4e2a\u6784\u9020\u5668\uff1a</p> <ul> <li><code>ok a</code>\uff1a\u8868\u793a\u64cd\u4f5c\u6210\u529f\uff0c<code>a</code> \u662f\u7c7b\u578b\u4e3a <code>\u03b1</code> \u7684\u6210\u529f\u503c</li> <li><code>error e</code>\uff1a\u8868\u793a\u64cd\u4f5c\u5931\u8d25\uff0c<code>e</code> \u662f\u7c7b\u578b\u4e3a <code>\u03b5</code> \u7684\u9519\u8bef\u4fe1\u606f</li> </ul>"},{"location":"Lean4/Lean4_Python/#_7","title":"\u6bd4\u8f83\u89c4\u5219","text":"<ul> <li><code>error</code> \u503c\u5c0f\u4e8e\u4efb\u4f55 <code>ok</code> \u503c</li> <li>\u4e24\u4e2a <code>error</code> \u503c\u4e4b\u95f4\u7684\u6bd4\u8f83\u53d6\u51b3\u4e8e\u5b83\u4eec\u7684\u9519\u8bef\u503c <code>\u03b5</code> \u7684\u6bd4\u8f83</li> <li>\u4e24\u4e2a <code>ok</code> \u503c\u4e4b\u95f4\u7684\u6bd4\u8f83\u53d6\u51b3\u4e8e\u5b83\u4eec\u7684\u6210\u529f\u503c <code>\u03b1</code> \u7684\u6bd4\u8f83</li> </ul>"},{"location":"Lean4/Lean4_Python/#_8","title":"\u4f8b\u5b50","text":"<pre><code>#eval compare (Result.error \"Error A\" : Result String Nat) (Result.ok 5)  -- \u7ed3\u679c: Ordering.lt\n#eval compare (Result.error \"Error A\") (Result.error \"Error B\")           -- \u7ed3\u679c: Ordering.lt\n#eval compare (Result.ok 3) (Result.ok 5)                                 -- \u7ed3\u679c: Ordering.lt\n</code></pre>"},{"location":"Lean4/Lean4_Python/#7","title":"7. \u96c6\u5408\u7c7b\u578b","text":"<p>\u5982 <code>Set</code>\u3001<code>Map</code> \u7b49\uff0c\u5047\u8bbe\u5b83\u4eec\u7684\u5143\u7d20\u7c7b\u578b\u662f\u53ef\u6bd4\u8f83\u7684\u3002</p>"},{"location":"Lean4/Lean4_Python/#set","title":"\u96c6\u5408 (Set) \u7684\u6bd4\u8f83","text":"<p>\u5728 Lean \u4e2d\uff0c<code>Set \u03b1</code> \u901a\u5e38\u8868\u793a\u5143\u7d20\u7c7b\u578b\u4e3a <code>\u03b1</code> \u7684\u96c6\u5408\u3002\u96c6\u5408\u7684\u6bd4\u8f83\u57fa\u4e8e\u5b83\u4eec\u7684\u5143\u7d20\u548c\u5b50\u96c6\u5173\u7cfb\u3002</p>"},{"location":"Lean4/Lean4_Python/#_9","title":"\u6bd4\u8f83\u89c4\u5219","text":"<p>a) \u5927\u5c0f\u6bd4\u8f83\uff1a    - \u5982\u679c <code>A</code> \u662f <code>B</code> \u7684\u771f\u5b50\u96c6\uff0c\u5219 <code>A &lt; B</code>    - \u5982\u679c <code>A = B</code>\uff08\u5373\u5b83\u4eec\u5305\u542b\u76f8\u540c\u7684\u5143\u7d20\uff09\uff0c\u5219 <code>A == B</code>    - \u5982\u679c <code>A</code> \u548c <code>B</code> \u90fd\u4e0d\u662f\u5bf9\u65b9\u7684\u5b50\u96c6\uff0c\u5219\u5b83\u4eec\u662f\u4e0d\u53ef\u6bd4\u8f83\u7684</p> <p>b) \u5b57\u5178\u5e8f\u6bd4\u8f83\uff08\u5f53\u9700\u8981\u5168\u5e8f\u5173\u7cfb\u65f6\uff09\uff1a    - \u5c06\u96c6\u5408\u8f6c\u6362\u4e3a\u6709\u5e8f\u5217\u8868    - \u6309\u5b57\u5178\u5e8f\u6bd4\u8f83\u8fd9\u4e9b\u5217\u8868</p>"},{"location":"Lean4/Lean4_Python/#_10","title":"\u4f8b\u5b50","text":"<pre><code>import Std.Data.Set\n\nopen Std\n\ndef setA : Set Nat := Set.ofList [1, 2, 3]\ndef setB : Set Nat := Set.ofList [1, 2, 3, 4]\ndef setC : Set Nat := Set.ofList [1, 2, 4]\n\n#eval setA &lt; setB  -- \u8f93\u51fa: true \uff08A \u662f B \u7684\u771f\u5b50\u96c6\uff09\n#eval setA == setB -- \u8f93\u51fa: false\n#eval setA &lt; setC  -- \u5728\u6807\u51c6\u7684\u96c6\u5408\u6bd4\u8f83\u4e2d\uff0c\u8fd9\u662f\u4e0d\u53ef\u6bd4\u8f83\u7684\n</code></pre>"},{"location":"Lean4/Lean4_Python/#map","title":"\u6620\u5c04 (Map) \u7684\u6bd4\u8f83","text":"<p>\u5728 Lean \u4e2d\uff0c<code>Map \u03ba \u03bd</code> \u901a\u5e38\u8868\u793a\u952e\u7c7b\u578b\u4e3a <code>\u03ba</code>\uff0c\u503c\u7c7b\u578b\u4e3a <code>\u03bd</code> \u7684\u6620\u5c04\u3002\u6620\u5c04\u7684\u6bd4\u8f83\u901a\u5e38\u57fa\u4e8e\u5b83\u4eec\u7684\u952e\u503c\u5bf9\u3002</p>"},{"location":"Lean4/Lean4_Python/#_11","title":"\u6bd4\u8f83\u89c4\u5219","text":"<p>a) \u5927\u5c0f\u6bd4\u8f83\uff1a    - \u5982\u679c <code>M1</code> \u7684\u6240\u6709\u952e\u503c\u5bf9\u90fd\u5728 <code>M2</code> \u4e2d\uff0c\u4e14 <code>M2</code> \u6bd4 <code>M1</code> \u6709\u66f4\u591a\u7684\u952e\u503c\u5bf9\uff0c\u5219 <code>M1 &lt; M2</code>    - \u5982\u679c <code>M1</code> \u548c <code>M2</code> \u6709\u5b8c\u5168\u76f8\u540c\u7684\u952e\u503c\u5bf9\uff0c\u5219 <code>M1 == M2</code></p> <p>b) \u5b57\u5178\u5e8f\u6bd4\u8f83\uff08\u5f53\u9700\u8981\u5168\u5e8f\u5173\u7cfb\u65f6\uff09\uff1a    - \u5c06\u6620\u5c04\u8f6c\u6362\u4e3a\u952e\u503c\u5bf9\u7684\u6709\u5e8f\u5217\u8868    - \u9996\u5148\u6bd4\u8f83\u952e\uff0c\u5982\u679c\u952e\u76f8\u540c\uff0c\u5219\u6bd4\u8f83\u503c    - \u6309\u8fd9\u4e2a\u987a\u5e8f\u8fdb\u884c\u5b57\u5178\u5e8f\u6bd4\u8f83</p>"},{"location":"Lean4/Lean4_Python/#_12","title":"\u4f8b\u5b50","text":"<pre><code>import Std.Data.HashMap\n\nopen Std\n\ndef mapA : HashMap String Nat := HashMap.ofList [(\"a\", 1), (\"b\", 2)]\ndef mapB : HashMap String Nat := HashMap.ofList [(\"a\", 1), (\"b\", 2), (\"c\", 3)]\ndef mapC : HashMap String Nat := HashMap.ofList [(\"a\", 1), (\"b\", 3)]\n\n#eval mapA &lt; mapB  -- \u8f93\u51fa: true \uff08A \u7684\u6240\u6709\u952e\u503c\u5bf9\u90fd\u5728 B \u4e2d\uff0c\u4e14 B \u66f4\u5927\uff09\n#eval mapA == mapB -- \u8f93\u51fa: false\n#eval mapA &lt; mapC  -- \u8fd9\u79cd\u6bd4\u8f83\u53ef\u80fd\u9700\u8981\u81ea\u5b9a\u4e49\u5b9e\u73b0\n</code></pre>"},{"location":"Lean4/Lean4_Python/#_13","title":"\u603b\u7ed3","text":"<p>\u5728 Lean 4 \u4e2d\uff0c<code>Ord</code> \u7c7b\u578b\u7c7b\u63d0\u4f9b\u4e86\u4e00\u79cd\u5f3a\u5927\u7684\u673a\u5236\u6765\u6bd4\u8f83\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u3002\u901a\u8fc7 <code>compare</code> \u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u57fa\u672c\u6570\u503c\u7c7b\u578b\u3001\u5b57\u7b26\u548c\u5b57\u7b26\u4e32\u3001\u5e03\u5c14\u503c\u3001\u590d\u5408\u7c7b\u578b\uff08\u5982\u5143\u7ec4\u3001\u5217\u8868\u3001\u6570\u7ec4\uff09\u3001\u53ef\u9009\u7c7b\u578b\u3001\u7ed3\u679c\u7c7b\u578b\u4ee5\u53ca\u96c6\u5408\u548c\u6620\u5c04\u7684\u6bd4\u8f83\u3002</p>"},{"location":"Lean4/Lean4_Python/#for","title":"For \u5faa\u73af\u53d8\u4e3a\u9012\u5f52","text":"<p>\u5c06 for \u5faa\u73af\u8f6c\u6362\u4e3a\u9012\u5f52\u51fd\u6570\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u6280\u5de7\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u4e00\u822c\u6027\u7684\u65b9\u6cd5\u6765\u5c06 for \u5faa\u73af\u8f6c\u6362\u4e3a\u9012\u5f52\u51fd\u6570\uff1a</p> <ol> <li>\u786e\u5b9a\u5faa\u73af\u53d8\u91cf\u548c\u5faa\u73af\u4f53</li> <li>\u521b\u5efa\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\uff0c\u5176\u53c2\u6570\u5305\u62ec\u5faa\u73af\u53d8\u91cf\u548c\u4efb\u4f55\u5728\u5faa\u73af\u4e2d\u66f4\u65b0\u7684\u72b6\u6001</li> <li>\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\u6765\u68c0\u67e5\u5faa\u73af\u7ed3\u675f\u6761\u4ef6</li> <li>\u5728\u9012\u5f52\u8c03\u7528\u4e2d\u66f4\u65b0\u5faa\u73af\u53d8\u91cf\u548c\u72b6\u6001</li> </ol> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u901a\u7528\u6a21\u677f\uff1a</p> <pre><code>-- \u5047\u8bbe\u7684 for \u5faa\u73af\nfor (i := start; i &lt; end; i := i + step) {\n  // \u5faa\u73af\u4f53\n}\n\n-- \u8f6c\u6362\u4e3a\u9012\u5f52\u51fd\u6570\ndef recursiveFunction (i : Nat) (state : State) : State :=\n  if i &gt;= end then\n    state  -- \u57fa\u672c\u60c5\u51b5\uff1a\u5faa\u73af\u7ed3\u675f\n  else\n    let newState := -- \u6267\u884c\u5faa\u73af\u4f53\uff0c\u66f4\u65b0\u72b6\u6001\n    recursiveFunction (i + step) newState  -- \u9012\u5f52\u8c03\u7528\n\n-- \u4f7f\u7528\u9012\u5f52\u51fd\u6570\nlet result := recursiveFunction start initialState\n</code></pre> <p>\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u6bd4\u5982\u8ba1\u7b97 1 \u5230 n \u7684\u548c\uff1a</p> <pre><code>-- \u4f7f\u7528 for \u5faa\u73af\u7684\u4f2a\u4ee3\u7801\nsum := 0\nfor (i := 1; i &lt;= n; i := i + 1) {\n  sum := sum + i\n}\n\n-- \u8f6c\u6362\u4e3a Lean \u4e2d\u7684\u9012\u5f52\u51fd\u6570\ndef sumToN (n : Nat) : Nat :=\n  let rec loop (i : Nat) (sum : Nat) : Nat :=\n    if i &gt; n then\n      sum  -- \u57fa\u672c\u60c5\u51b5\uff1a\u5faa\u73af\u7ed3\u675f\n    else\n      loop (i + 1) (sum + i)  -- \u9012\u5f52\u8c03\u7528\uff0c\u66f4\u65b0 sum\n  loop 1 0  -- \u4ece 1 \u5f00\u59cb\uff0c\u521d\u59cb sum \u4e3a 0\n\n#eval sumToN 5  -- \u8f93\u51fa: 15\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff1a</p> <ol> <li>\u5faa\u73af\u53d8\u91cf <code>i</code> \u6210\u4e3a\u9012\u5f52\u51fd\u6570 <code>loop</code> \u7684\u53c2\u6570\u3002</li> <li>\u7d2f\u52a0\u7684 <code>sum</code> \u4e5f\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u3002</li> <li>\u5faa\u73af\u6761\u4ef6 <code>i &lt;= n</code> \u8f6c\u6362\u4e3a\u9012\u5f52\u7684\u7ec8\u6b62\u6761\u4ef6 <code>i &gt; n</code>\u3002</li> <li>\u5faa\u73af\u4f53\u4e2d\u7684\u64cd\u4f5c\uff08\u8fd9\u91cc\u662f <code>sum + i</code>\uff09\u5728\u9012\u5f52\u8c03\u7528\u4e2d\u6267\u884c\u3002</li> </ol> <pre><code>def swap (arr : List Nat) (i j : Nat) : List Nat :=\n  if i == j then arr\n  else if i &gt; j then swap arr j i\n  else\n    let n := arr.length\n    if i &gt;= n || j &gt;= n then arr\n    else\n      let vi := arr[i]!\n      let vj := arr[j]!\n      let rec loop (l : List Nat) (idx : Nat) (acc : List Nat) : List Nat :=\n        match l with\n        | [] =&gt; acc.reverse\n        | x :: xs =&gt;\n          if idx == i then loop xs (idx + 1) (vj :: acc)\n          else if idx == j then loop xs (idx + 1) (vi :: acc)\n          else loop xs (idx + 1) (x :: acc)\n      loop arr 0 []\n\ndef bubbleSort (arr : List Nat) : List Nat :=\n  let n := arr.length\n  let rec outerLoop (arr : List Nat) (i : Nat) : List Nat :=\n    if i &lt; n then\n      let rec innerLoop (arr : List Nat) (j : Nat) : List Nat :=\n        if j &lt; n - i - 1 then\n          let arr :=\n            if arr[j]! &gt; arr[j+1]! then\n              swap arr j (j+1)\n            else\n              arr\n          innerLoop arr (j + 1)\n        else\n          arr\n      outerLoop (innerLoop arr 0) (i + 1)\n    else\n      arr\n  outerLoop arr 0\n\n#eval bubbleSort [64, 34, 25, 12, 22, 11, 90]\n</code></pre>"},{"location":"Lean4/Lean4_Python/#_14","title":"\u8f6c\u6362\u7684\u4e00\u822c\u903b\u8f91\uff1a","text":"<p>\u5c06Python\u4ee3\u7801\u4e2d\u7684for\u5faa\u73af\u9996\u5148\u8f6c\u6362\u4e3a\u9012\u5f52\uff0c\u518d\u8ba9\u6a21\u578b\u5904\u7406\u9012\u5f52\u7684\u4ee3\u7801\u8f6c\u6362</p> <p>\u5728lean4\u4e2d\uff0c\u5217\u8868\u3001\u6570\u7ec4\u662f\u4e0d\u53ef\u4ea4\u6362</p> <pre><code>import Std\n\npartial def quicksort (arr : List Nat) : List Nat :=\n  match arr with\n  | [] =&gt; []\n  | pivot :: rest =&gt;\n    let left := rest.filter (\u00b7 &lt; pivot)\n    let middle := pivot :: rest.filter (\u00b7 == pivot)\n    let right := rest.filter (\u00b7 &gt; pivot)\n    quicksort left ++ middle ++ quicksort right\n\n#eval quicksort [3, 6, 8, 10, 1, 2, 1]\n\ndef swapArray [Inhabited \u03b1] (arr : Array \u03b1) (i j : Nat) : Except String (Array \u03b1) := do\n  if i == j then\n    pure arr\n  else if i &lt; arr.size &amp;&amp; j &lt; arr.size then\n    let vi := arr[i]!\n    let vj := arr[j]!\n    pure (arr.set! i vj |&gt;.set! j vi)\n  else\n    throw s!\"Index out of bounds: i = {i}, j = {j}, array size = {arr.size}\"\n\ndef printSwapResult (arr : Array Nat) (i j : Nat) : IO Unit := do\n  match swapArray arr i j with\n  | .ok result =&gt; \n    IO.println s!\"Swapped array: {result}\"\n  | .error msg =&gt; \n    IO.println s!\"Error: {msg}\"\n\n#eval printSwapResult #[1, 2, 3, 4, 5] 1 3\n#eval printSwapResult #[1, 2, 3, 4, 5] 1 41\n\npartial def insert (a : Nat) (xs : List Nat) : List Nat :=\n  match xs with\n  | [] =&gt; [a]\n  | x :: rest =&gt;\n    if a &lt;= x then\n      a :: xs\n    else\n      x :: insert a rest\n\npartial def insertionSort (xs : List Nat) : List Nat :=\n  match xs with\n  | [] =&gt; []\n  | x :: rest =&gt;\n    insert x (insertionSort rest)\n\n#eval insertionSort [5, 2, 8, 12, 1, 6]\n\npartial def merge (left : List Nat) (right : List Nat) : List Nat :=\n  match left, right with\n  | [], r =&gt; r\n  | l, [] =&gt; l\n  | x::xs, y::ys =&gt;\n    if x &lt;= y then\n      x :: merge xs right\n    else\n      y :: merge left ys\n\npartial def mergeSort (list : List Nat) : List Nat :=\n  match list with\n  | [] =&gt; []\n  | [x] =&gt; [x]\n  | xs =&gt;\n    let mid := xs.length / 2\n    let (left, right) := xs.splitAt mid\n    merge (mergeSort left) (mergeSort right)\n\n#eval mergeSort [5, 2, 8, 12, 1, 6]\n\n\n\n\ndef getElementAt (arr : List Nat) (i : Nat) : Except String Nat :=\n  if i &lt; arr.length then\n    return arr[i]!\n  else\n    throw s!\"Index out of bounds: {i}, list length = {arr.length}\"\n\ndef swap (arr : List Nat) (i j : Nat) : Except String (List Nat) :=\n  if i == j then\n    return arr\n  else if i &gt; j then\n    swap arr j i\n  else\n    let n := arr.length\n    if i &gt;= n || j &gt;= n then\n      throw s!\"Index out of bounds: i = {i}, j = {j}, list length = {n}\"\n    else\n      let vi := getElementAt arr i\n      let vj := getElementAt arr j\n      match vi, vj with\n      | .ok vi_value, .ok vj_value =&gt;\n        let rec loop (l : List Nat) (idx : Nat) (acc : List Nat) : List Nat :=\n          match l with\n          | [] =&gt; acc.reverse\n          | x :: xs =&gt;\n            if idx == i then loop xs (idx + 1) (vj_value :: acc)\n            else if idx == j then loop xs (idx + 1) (vi_value :: acc)\n            else loop xs (idx + 1) (x :: acc)\n        return loop arr 0 []\n      | .error msg1, _ =&gt; throw msg1\n      | _, .error msg2 =&gt; throw msg2\n\n-- \u6d4b\u8bd5\u4ee3\u7801\ndef testSwap : IO Unit := do\n  let arr := [1, 2, 3, 4, 5]\n\n  match swap arr 1 3 with\n  | .ok result =&gt;\n    IO.println s!\"Swapped array: {result}\"\n  | .error msg =&gt;\n    IO.println s!\"Error: {msg}\"\n\n  match swap arr 1 5 with\n  | .ok result =&gt;\n    IO.println s!\"Swapped array: {result}\"\n  | .error msg =&gt;\n    IO.println s!\"Error: {msg}\"\n\n#eval testSwap\n\ndef getElementAtArray[Inhabited \u03b1] (arr : Array \u03b1) (i : Nat) : Except String \u03b1 :=\n  if i &lt; arr.size then\n    return arr[i]!\n  else\n    throw s!\"Index out of bounds: {i}, array size = {arr.size}\"\n\n-- \u6d4b\u8bd5\u4ee3\u7801\ndef testGetElementAt : IO Unit := do\n  let arr := #[1, 2, 3, 4, 5]\n\n  match getElementAtArray arr 2 with\n  | .ok value =&gt; \n    IO.println s!\"Value at index 2: {value}\"\n  | .error msg =&gt; \n    IO.println s!\"Error: {msg}\"\n\n  match getElementAtArray arr 10 with\n  | .ok value =&gt; \n    IO.println s!\"Value at index 10: {value}\"\n  | .error msg =&gt; \n    IO.println s!\"Error: {msg}\"\n\n#eval testGetElementAt\n\n\n\nopen Std\n\n-- \u5b9a\u4e49\u4e00\u4e2a\u4ece HashMap \u83b7\u53d6\u503c\u7684\u51fd\u6570\ndef getValueAt (dict : HashMap String Nat) (key : String) : Except String Nat :=\n  match dict.get? key with\n  | some value =&gt; return value\n  | none =&gt; throw s!\"Key not found: {key}\"\n\n-- \u6d4b\u8bd5\u5b57\u5178\u67e5\u627e\ndef testGetValueAt : IO Unit := do\n  -- \u521b\u5efa\u4e00\u4e2a\u5b57\u5178 (HashMap)\n  let dict : HashMap String Nat := HashMap.empty\n    |&gt;.insert \"a\" 1\n    |&gt;.insert \"b\" 2\n    |&gt;.insert \"c\" 3\n\n  -- \u6d4b\u8bd5\u6709\u6548\u952e\n  match getValueAt dict \"b\" with\n  | .ok value =&gt; IO.println s!\"Value for 'b': {value}\"\n  | .error msg =&gt; IO.println s!\"Error: {msg}\"\n\n  -- \u6d4b\u8bd5\u65e0\u6548\u952e\n  match getValueAt dict \"x\" with\n  | .ok value =&gt; IO.println s!\"Value for 'x': {value}\"\n  | .error msg =&gt; IO.println s!\"Error: {msg}\"\n\n#eval testGetValueAt\n</code></pre>"},{"location":"Lean4/Lean4_Python/#cp0","title":"Cp0 \u57fa\u7840\u5de5\u5177","text":"<p>range\u7684\u521b\u5efa\uff1a</p> <p><code>.range default_end</code>\u6765\u8868\u793a\u4ece0\u5230default_end-1</p> <p><code>.range start end</code>\u6765\u8868\u793a\u4ecestart\u5230end-1</p> <p>\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u8fdb\u884c\u6b65\u957f\u8bbe\u7f6e\uff1a <pre><code>partial def rangeWithStep (start : Int) (end1 : Int) (step : Int) : List Int :=\n  if step == 0 then\n    []  -- \u6b65\u957f\u4e3a0\u65f6\u8fd4\u56de\u7a7a\u5217\u8868\n  else\n    let rec loop (current : Int) (acc : List Int) : List Int :=\n      if (step &gt; 0 &amp;&amp; current &gt;= end1) || (step &lt; 0 &amp;&amp; current &lt;= end1) then\n        acc\n      else\n        loop (current + step) (current :: acc)\n\n    if step &gt; 0 then\n      (loop start []).reverse  -- \u6b63\u5e8f\n    else\n      loop start []  -- \u5012\u5e8f\n\n-- \u6d4b\u8bd5\n#eval rangeWithStep 0 10 2    -- \u8f93\u51fa: [0, 2, 4, 6, 8]\n#eval rangeWithStep 10 0 (-2) -- \u8f93\u51fa: [10, 8, 6, 4, 2]\n#eval rangeWithStep 0 5 1     -- \u8f93\u51fa: [0, 1, 2, 3, 4]\n#eval rangeWithStep 5 0 (-1)  -- \u8f93\u51fa: [5, 4, 3, 2, 1]\n#eval rangeWithStep 0 10 0    -- \u8f93\u51fa: []\n</code></pre></p> <p>\u5173\u4e8elet\u548cdef</p> <ol> <li><code>let</code> \u58f0\u660e\uff1a</li> <li>\u7528\u4e8e\u521b\u5efa\u5c40\u90e8\u53d8\u91cf\u6216\u5c40\u90e8\u51fd\u6570\u3002</li> <li>\u53ea\u5728\u5176\u4f5c\u7528\u57df\u5185\u53ef\u89c1\uff08\u6bd4\u5982\u5728\u4e00\u4e2a\u51fd\u6570\u5185\u90e8\u6216\u4e00\u4e2a <code>do</code> \u5757\u5185\uff09\u3002</li> <li>\u4e0d\u80fd\u5728\u6a21\u5757\u9876\u5c42\u4f7f\u7528\uff08\u9664\u975e\u5728\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5982 <code>#eval</code> \u547d\u4ee4\u4e2d\uff09\u3002</li> <li> <p>\u503c\u53ef\u4ee5\u662f\u8868\u8fbe\u5f0f\u3002</p> </li> <li> <p><code>def</code> \u58f0\u660e\uff1a</p> </li> <li>\u7528\u4e8e\u5b9a\u4e49\u5168\u5c40\u51fd\u6570\u6216\u5e38\u91cf\u3002</li> <li>\u5728\u6574\u4e2a\u6a21\u5757\u4e2d\u53ef\u89c1\uff0c\u4e5f\u53ef\u4ee5\u88ab\u5176\u4ed6\u6a21\u5757\u5bfc\u5165\u548c\u4f7f\u7528\u3002</li> <li>\u53ef\u4ee5\u5728\u6a21\u5757\u9876\u5c42\u4f7f\u7528\u3002</li> <li>\u901a\u5e38\u9700\u8981\u6307\u5b9a\u7c7b\u578b\uff08\u867d\u7136\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u4ee5\u7701\u7565\uff09\u3002</li> </ol> <p>\u4f8b\u5b50\uff1a</p> <pre><code>def globalValue : Nat := 10  -- \u5168\u5c40\u5e38\u91cf\n\ndef exampleFunction : IO Unit := do\n  let localValue := 20  -- \u5c40\u90e8\u53d8\u91cf\n  IO.println s!\"Global value: {globalValue}\"\n  IO.println s!\"Local value: {localValue}\"\n\n-- \u8fd9\u662f\u6b63\u786e\u7684\n#eval globalValue\n\n-- \u8fd9\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a localValue \u53ea\u5728 exampleFunction \u5185\u90e8\u53ef\u89c1\n-- #eval localValue  \n\n-- \u5728\u6a21\u5757\u9876\u5c42\u4f7f\u7528 let \u901a\u5e38\u4f1a\u62a5\u9519\n-- let topLevelLet := 30  \n\n-- \u4f46\u5728 #eval \u4e2d\u4f7f\u7528 let \u662f\u5141\u8bb8\u7684\n#eval let x := 5; x * 2\n</code></pre>"},{"location":"Lean4/Lean4_Python/#cp1","title":"Cp1 \u5217\u8868\u4e0e\u6570\u7ec4","text":""},{"location":"Lean4/Lean4_Python/#lean-4-python","title":"Lean 4 \u4e0e Python \u6570\u7ec4/\u5217\u8868\u64cd\u4f5c\u5bf9\u7167\u8868","text":"<p>Python \u7684\u5217\u8868\u662f\u4e00\u79cd\u975e\u5e38\u7075\u6d3b\u548c\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u6709\u5f88\u591a\u7279\u6027\u548c\u65b9\u6cd5\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7efc\u5408\u7684\u5217\u8868\uff1a 1. \u521b\u5efa\u548c\u521d\u59cb\u5316    - \u7a7a\u5217\u8868: <code>[]</code>    - \u542b\u5143\u7d20\u5217\u8868: <code>[1, 2, 3]</code>    - \u5217\u8868\u63a8\u5bfc\u5f0f: <code>[x for x in range(10)]</code>    - \u7528 <code>list()</code> \u51fd\u6570\u521b\u5efa: <code>list('abc')</code> 2. \u8bbf\u95ee\u5143\u7d20    - \u7d22\u5f15\u8bbf\u95ee: <code>lst[0]</code>, <code>lst[-1]</code>    - \u5207\u7247: <code>lst[1:3]</code>, <code>lst[::-1]</code> 3. \u4fee\u6539\u5143\u7d20    - \u5355\u4e2a\u5143\u7d20\u8d4b\u503c: <code>lst[0] = 10</code>    - \u5207\u7247\u8d4b\u503c: <code>lst[1:3] = [4, 5]</code> 4. \u6dfb\u52a0\u5143\u7d20    - \u5728\u672b\u5c3e\u6dfb\u52a0: <code>lst.append(4)</code>    - \u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165: <code>lst.insert(1, 5)</code>    - \u6269\u5c55\u5217\u8868: <code>lst.extend([4, 5, 6])</code> \u6216 <code>lst += [4, 5, 6]</code> 5. \u5220\u9664\u5143\u7d20    - \u5220\u9664\u6307\u5b9a\u7d22\u5f15\u7684\u5143\u7d20: <code>del lst[1]</code>    - \u79fb\u9664\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u503c: <code>lst.remove(3)</code>    - \u5f39\u51fa\u5143\u7d20: <code>lst.pop()</code> \u6216 <code>lst.pop(1)</code>    - \u6e05\u7a7a\u5217\u8868: <code>lst.clear()</code> 6. \u5217\u8868\u957f\u5ea6\u548c\u5305\u542b\u5173\u7cfb    - \u957f\u5ea6: <code>len(lst)</code>    - \u68c0\u67e5\u5143\u7d20\u662f\u5426\u5728\u5217\u8868\u4e2d: <code>3 in lst</code> 7. \u5217\u8868\u64cd\u4f5c    - \u8fde\u63a5\u5217\u8868: <code>lst1 + lst2</code>    - \u91cd\u590d\u5217\u8868: <code>lst * 3</code> 8. \u6392\u5e8f\u548c\u53cd\u8f6c    - \u6392\u5e8f: <code>lst.sort()</code> \u6216 <code>sorted(lst)</code>    - \u53cd\u8f6c: <code>lst.reverse()</code> \u6216 <code>reversed(lst)</code> 9. \u8ba1\u6570\u548c\u7d22\u5f15    - \u8ba1\u6570\u5143\u7d20\u51fa\u73b0\u6b21\u6570: <code>lst.count(3)</code>    - \u67e5\u627e\u5143\u7d20\u7d22\u5f15: <code>lst.index(3)</code> 10. \u590d\u5236     - \u6d45\u590d\u5236: <code>lst.copy()</code> \u6216 <code>lst[:]</code>     - \u6df1\u590d\u5236: <code>import copy; copy.deepcopy(lst)</code> 11. \u5217\u8868\u63a8\u5bfc\u548c\u751f\u6210     - \u5217\u8868\u63a8\u5bfc: <code>[x**2 for x in range(10)]</code>     - \u4f7f\u7528 map: <code>list(map(lambda x: x**2, range(10)))</code> 12. \u5176\u4ed6\u64cd\u4f5c     - \u6700\u5927\u503c\u548c\u6700\u5c0f\u503c: <code>max(lst)</code>, <code>min(lst)</code>     - \u6c42\u548c: <code>sum(lst)</code> 13. \u591a\u7ef4\u5217\u8868     - \u521b\u5efa: <code>[[0 for _ in range(3)] for _ in range(3)]</code> 14. \u5217\u8868\u4f5c\u4e3a\u6808\u6216\u961f\u5217     - \u6808\u64cd\u4f5c: <code>lst.append()</code> \u548c <code>lst.pop()</code>     - \u961f\u5217\u64cd\u4f5c: <code>lst.append()</code> \u548c <code>lst.pop(0)</code> (\u4e0d\u63a8\u8350\u7528\u4e8e\u5927\u578b\u5217\u8868)</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u9010\u4e00\u67e5\u627e\u8fd9\u4e9b\u64cd\u4f5c\u5728 Lean 4 \u4e2d\u7684\u5bf9\u5e94\u5b9e\u73b0\uff0c\u5e76\u4e3a\u5b83\u4eec\u7f16\u5199\u6d4b\u8bd5\u3002</p>"},{"location":"Lean4/Lean4_Python/#1_1","title":"1.\u521d\u59cb\u5316","text":"<p>\u5173\u4e8elean4\u5217\u8868\u7684\u521d\u59cb\u5316\uff1a 1. \u5728\u6307\u5b9a\u5217\u8868\u7c7b\u578b\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u822c\u7684 <code>let nonEmptyList : List Int := [1, 2, 3]</code>\u6765\u521b\u5efa\u5217\u8868 \u5982\u679c\u6211\u4eec\u8981\u7528\u8303\u56f4\uff0c\u53ef\u4ee5\u4f7f\u7528<code>List.range max_num</code></p>"},{"location":"Lean4/Lean4_Python/#2_1","title":"2.\u8bbf\u95ee\u5143\u7d20","text":"<pre><code>def example_index_access : IO Unit := do\n  let lst : List Int := [1, 2, 3, 4, 5]\n\n  -- \u6b63\u5411\u7d22\u5f15\u8bbf\u95ee\n  IO.println s!\"First element: {lst.get? 0}\"\n  -- \u4f7f\u7528 ! \u64cd\u4f5c\u7b26\uff08\u4e0d\u5b89\u5168\uff0c\u53ef\u80fd\u4f1a\u5728\u8d8a\u754c\u65f6\u5d29\u6e83\uff09\n  IO.println s!\"Second element: {lst[1]!}\"\n\n  -- Lean \u6ca1\u6709\u5185\u7f6e\u7684\u8d1f\u7d22\u5f15\u652f\u6301\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0\n  let last := lst.get? (lst.length - 1)\n  IO.println s!\"Last element: {last}\"\n\n#eval example_index_access\n</code></pre>"},{"location":"Lean4/LeanFunction/","title":"Lean4 \u6570\u5b66\u6559\u7a0b\uff1a\u4ece\u7ebf\u6027\u65b9\u7a0b\u5230\u725b\u987f\u6cd5","text":""},{"location":"Lean4/LeanFunction/#_1","title":"\u5f15\u8a00","text":"<p>\u5728\u6570\u5b66\u548c\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4ea4\u53c9\u9886\u57df\uff0c\u5f62\u5f0f\u5316\u65b9\u6cd5\u548c\u5b9a\u7406\u8bc1\u660e\u7cfb\u7edf\u6b63\u5728\u53d1\u6325\u8d8a\u6765\u8d8a\u91cd\u8981\u7684\u4f5c\u7528\u3002Lean4 \u4f5c\u4e3a\u4e00\u79cd\u5148\u8fdb\u7684\u5b9a\u7406\u8bc1\u660e\u52a9\u624b\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u5de5\u5177\u6765\u63a2\u7d22\u6570\u5b66\u6982\u5ff5\u3001\u5b9e\u73b0\u7b97\u6cd5\uff0c\u5e76\u9a8c\u8bc1\u5176\u6b63\u786e\u6027\u3002</p> <p>\u672c\u6559\u7a0b\u7684\u76ee\u6807\u662f\u901a\u8fc7\u4e00\u7cfb\u5217\u6e10\u8fdb\u590d\u6742\u7684\u6570\u5b66\u95ee\u9898\uff0c\u5c55\u793a Lean4 \u5728\u6570\u5b66\u5efa\u6a21\u548c\u8ba1\u7b97\u65b9\u9762\u7684\u80fd\u529b\u3002\u6211\u4eec\u5c06\u4ece\u7b80\u5355\u7684\u7ebf\u6027\u65b9\u7a0b\u5f00\u59cb\uff0c\u9010\u6b65\u6df1\u5165\u5230\u4e8c\u6b21\u65b9\u7a0b\u7684\u6c42\u89e3\uff0c\u6700\u540e\u4ecb\u7ecd\u725b\u987f\u6cd5\u8fd9\u4e00\u5f3a\u5927\u7684\u6570\u503c\u65b9\u6cd5\u3002\u901a\u8fc7\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6211\u4eec\u4e0d\u4ec5\u80fd\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 Lean4 \u89e3\u51b3\u5b9e\u9645\u95ee\u9898\uff0c\u8fd8\u80fd\u6df1\u5165\u7406\u89e3\u6570\u5b66\u6982\u5ff5\u4e0e\u8ba1\u7b97\u673a\u5b9e\u73b0\u4e4b\u95f4\u7684\u8054\u7cfb\u3002</p>"},{"location":"Lean4/LeanFunction/#1","title":"1. \u7ebf\u6027\u65b9\u7a0b\uff1a\u7cbe\u786e\u6027\u4e0e\u8ba1\u7b97\u6548\u7387\u7684\u6743\u8861","text":"<p>\u6211\u4eec\u9996\u5148\u4ece\u6700\u57fa\u672c\u7684\u6570\u5b66\u6982\u5ff5\u4e4b\u4e00 \u2014\u2014 \u7ebf\u6027\u65b9\u7a0b\u5f00\u59cb\u3002\u7ebf\u6027\u65b9\u7a0b\u5f62\u5982 ax + b = 0\uff0c\u5176\u4e2d a \u548c b \u662f\u5e38\u6570\uff0cx \u662f\u672a\u77e5\u6570\u3002\u5728 Lean4 \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u591a\u79cd\u65b9\u5f0f\u8868\u793a\u548c\u6c42\u89e3\u8fd9\u7c7b\u65b9\u7a0b\uff0c\u6bcf\u79cd\u65b9\u5f0f\u90fd\u6709\u5176\u72ec\u7279\u7684\u4f18\u52bf\u548c\u5c40\u9650\u6027\u3002</p>"},{"location":"Lean4/LeanFunction/#11-q","title":"1.1 \u4f7f\u7528\u6709\u7406\u6570 (\u211a)","text":"<pre><code>import Mathlib.Data.Real.Basic\n\nstructure LinearEquation where\n  a : \u211a\n  b : \u211a\nderiving Repr\n\ndef solveLinearEquation (eq : LinearEquation) : Option \u211a :=\n  if eq.a = 0 then\n    if eq.b = 0 then some 0 else none\n  else\n    some (-eq.b / eq.a)\n\n-- \u793a\u4f8b\u4f7f\u7528\u4ee3\u7801\u7701\u7565...\n</code></pre> <p>\u4f7f\u7528\u6709\u7406\u6570\u7684\u4f18\u52bf\u5728\u4e8e\u5b83\u63d0\u4f9b\u4e86\u7cbe\u786e\u7684\u7ed3\u679c\uff0c\u907f\u514d\u4e86\u6d6e\u70b9\u6570\u8ba1\u7b97\u4e2d\u7684\u820d\u5165\u8bef\u5dee\u3002\u8fd9\u5bf9\u4e8e\u9700\u8981\u9ad8\u7cbe\u5ea6\u7684\u6570\u5b66\u8bc1\u660e\u6216\u91d1\u878d\u8ba1\u7b97\u7279\u522b\u6709\u7528\u3002\u7136\u800c\uff0c\u6709\u7406\u6570\u8fd0\u7b97\u53ef\u80fd\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u6548\u7387\u8f83\u4f4e\uff0c\u7279\u522b\u662f\u5f53\u5206\u5b50\u6216\u5206\u6bcd\u53d8\u5f97\u975e\u5e38\u5927\u65f6\u3002</p>"},{"location":"Lean4/LeanFunction/#12-float","title":"1.2 \u4f7f\u7528\u6d6e\u70b9\u6570 (Float)","text":"<pre><code>import Mathlib\n\nstructure LinearEquation where\n  a : Float\n  b : Float\n\ndef solveLinearEquation (eq : LinearEquation) : Option Float :=\n  if eq.a == 0 then\n    if eq.b == 0 then some 0 else none\n  else\n    some (-eq.b / eq.a)\n\n-- \u793a\u4f8b\u4f7f\u7528\u4ee3\u7801\u7701\u7565...\n</code></pre> <p>\u6d6e\u70b9\u6570\u5b9e\u73b0\u63d0\u4f9b\u4e86\u8ba1\u7b97\u6548\u7387\u548c\u5b9e\u7528\u6027\u4e4b\u95f4\u7684\u5e73\u8861\u3002\u5b83\u5141\u8bb8\u5feb\u901f\u8ba1\u7b97\uff0c\u5e76\u4e14\u53ef\u4ee5\u5904\u7406\u975e\u5e38\u5927\u6216\u975e\u5e38\u5c0f\u7684\u6570\u503c\u3002\u7136\u800c\uff0c\u6d6e\u70b9\u6570\u8ba1\u7b97\u53ef\u80fd\u5bfc\u81f4\u7cbe\u5ea6\u635f\u5931\uff0c\u8fd9\u5728\u67d0\u4e9b\u79d1\u5b66\u8ba1\u7b97\u6216\u91d1\u878d\u5e94\u7528\u4e2d\u53ef\u80fd\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002</p>"},{"location":"Lean4/LeanFunction/#13-r","title":"1.3 \u4f7f\u7528\u5b9e\u6570 (\u211d)","text":"<pre><code>import Mathlib.Data.Real.Basic\n\nstructure LinearEquation where\n  a : \u211d\n  b : \u211d\n\nnoncomputable def solveLinearEquation (eq : LinearEquation) : Option \u211d :=\n  if eq.a = 0 then\n    if eq.b = 0 then some 0 else none\n  else\n    some (-eq.b / eq.a)\n</code></pre> <p>\u4f7f\u7528\u5b9e\u6570\u7c7b\u578b\u63d0\u4f9b\u4e86\u7406\u8bba\u4e0a\u7684\u7cbe\u786e\u6027\uff0c\u8fd9\u5728\u6570\u5b66\u8bc1\u660e\u4e2d\u975e\u5e38\u6709\u7528\u3002\u7136\u800c\uff0c\u5b9e\u6570\u5728 Lean4 \u4e2d\u88ab\u6807\u8bb0\u4e3a <code>noncomputable</code>\uff0c\u610f\u5473\u7740\u5b83\u4eec\u4e0d\u80fd\u7528\u4e8e\u5b9e\u9645\u7684\u8ba1\u7b97\u3002\u8fd9\u79cd\u5b9e\u73b0\u4e3b\u8981\u7528\u4e8e\u5f62\u5f0f\u5316\u6570\u5b66\u7406\u8bba\u548c\u5b9a\u7406\u8bc1\u660e\u3002</p> <p>\u901a\u8fc7\u6bd4\u8f83\u8fd9\u4e09\u79cd\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u6df1\u5165\u7406\u89e3\u6570\u503c\u8868\u793a\u548c\u8ba1\u7b97\u7684\u4e0d\u540c\u65b9\u6cd5\uff0c\u4ee5\u53ca\u5b83\u4eec\u5728\u7cbe\u786e\u6027\u3001\u6548\u7387\u548c\u7406\u8bba\u57fa\u7840\u65b9\u9762\u7684\u6743\u8861\u3002\u8fd9\u79cd\u7406\u89e3\u5bf9\u4e8e\u9009\u62e9\u5408\u9002\u7684\u6570\u636e\u7c7b\u578b\u548c\u7b97\u6cd5\u6765\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u81f3\u5173\u91cd\u8981\u3002</p>"},{"location":"Lean4/LeanFunction/#2","title":"2. \u4e8c\u6b21\u65b9\u7a0b\uff1a\u5904\u7406\u590d\u6742\u6027\u548c\u7279\u6b8a\u60c5\u51b5","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u63a2\u8ba8\u66f4\u590d\u6742\u7684\u4e8c\u6b21\u65b9\u7a0b\u6c42\u89e3\u3002\u4e8c\u6b21\u65b9\u7a0b\u4e0d\u4ec5\u5f15\u5165\u4e86\u66f4\u591a\u7684\u6570\u5b66\u590d\u6742\u6027\uff0c\u8fd8\u9700\u8981\u6211\u4eec\u8003\u8651\u591a\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5982\u65e0\u89e3\u3001\u5355\u89e3\u548c\u53cc\u89e3\u3002</p> <pre><code>import Mathlib\n\nstructure QuadraticEquation where\n  a : Float\n  b : Float\n  c : Float\nderiving Repr\n\ndef solveQuadraticEquation (eq : QuadraticEquation) : Option (Float \u00d7 Float) :=\n  if eq.a == 0 then\n    -- \u5904\u7406\u9000\u5316\u4e3a\u7ebf\u6027\u65b9\u7a0b\u7684\u60c5\u51b5\n    if eq.b != 0 then\n      let x := -eq.c / eq.b\n      some (x, x)\n    else\n      none\n  else\n    -- \u8ba1\u7b97\u5224\u522b\u5f0f\n    let discriminant := eq.b * eq.b - 4 * eq.a * eq.c\n    if discriminant &lt; 0 then\n      none  -- \u65e0\u5b9e\u6570\u89e3\n    else if discriminant == 0 then\n      -- \u552f\u4e00\u89e3\n      let x := -eq.b / (2 * eq.a)\n      some (x, x)\n    else\n      -- \u4e24\u4e2a\u4e0d\u540c\u7684\u89e3\n      let sqrtD := Float.sqrt discriminant\n      let x1 := (-eq.b + sqrtD) / (2 * eq.a)\n      let x2 := (-eq.b - sqrtD) / (2 * eq.a)\n      some (x1, x2)\n\n-- \u793a\u4f8b\u4f7f\u7528\u4ee3\u7801\u7701\u7565...\n</code></pre> <p>\u8fd9\u4e2a\u5b9e\u73b0\u5c55\u793a\u4e86\u5982\u4f55\u5904\u7406\u5404\u79cd\u8fb9\u754c\u60c5\u51b5\u548c\u7279\u6b8a\u60c5\u51b5\uff0c\u8fd9\u662f\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u6280\u80fd\u3002\u6211\u4eec\u9700\u8981\u8003\u8651\uff1a 1. \u65b9\u7a0b\u9000\u5316\u4e3a\u7ebf\u6027\u65b9\u7a0b\u7684\u60c5\u51b5 (a = 0) 2. \u65e0\u89e3\u7684\u60c5\u51b5\uff08\u5224\u522b\u5f0f\u5c0f\u4e8e0\uff09 3. \u5355\u89e3\u7684\u60c5\u51b5\uff08\u5224\u522b\u5f0f\u7b49\u4e8e0\uff09 4. \u53cc\u89e3\u7684\u60c5\u51b5\uff08\u5224\u522b\u5f0f\u5927\u4e8e0\uff09</p> <p>\u901a\u8fc7\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u4e0d\u4ec5\u5b66\u4e60\u4e86\u5982\u4f55\u5728 Lean4 \u4e2d\u5b9e\u73b0\u590d\u6742\u7684\u6570\u5b66\u7b97\u6cd5\uff0c\u8fd8\u6df1\u5165\u7406\u89e3\u4e86\u6570\u5b66\u7406\u8bba\u4e0e\u5b9e\u9645\u7f16\u7a0b\u4e4b\u95f4\u7684\u8054\u7cfb\u3002</p>"},{"location":"Lean4/LeanFunction/#3","title":"3. \u725b\u987f\u6cd5\uff1a\u6570\u503c\u65b9\u6cd5\u4e0e\u8fed\u4ee3\u7b97\u6cd5","text":"<p>\u6700\u540e\uff0c\u6211\u4eec\u4ecb\u7ecd\u725b\u987f\u6cd5\uff0c\u8fd9\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u6570\u503c\u65b9\u6cd5\uff0c\u7528\u4e8e\u5bfb\u627e\u51fd\u6570\u7684\u6839\u3002\u725b\u987f\u6cd5\u5c55\u793a\u4e86\u5982\u4f55\u5c06\u5fae\u79ef\u5206\u6982\u5ff5\u8f6c\u5316\u4e3a\u8ba1\u7b97\u673a\u7b97\u6cd5\u3002</p> <pre><code>import Mathlib.Data.Real.Basic\nimport Mathlib.Analysis.SpecialFunctions.Sqrt\n\nstructure Function where\n  f : Float \u2192 Float\n  f' : Float \u2192 Float  -- \u5bfc\u6570\n\ndef newtonMethod (func : Function) (x0 : Float) (tolerance : Float) (maxIterations : Nat) : Float :=\n  let rec iterate (x : Float) (n : Nat) : Float :=\n    if n = 0 then x\n    else\n      let fx := func.f x\n      if fx.abs &lt; tolerance then x\n      else\n        let x' := x - fx / func.f' x\n        iterate x' (n - 1)\n  iterate x0 maxIterations\n\n-- \u793a\u4f8b\u4f7f\u7528\u4ee3\u7801\u7701\u7565...\n</code></pre> <p>\u725b\u987f\u6cd5\u7684\u5b9e\u73b0\u4f53\u73b0\u4e86\u51e0\u4e2a\u91cd\u8981\u7684\u7f16\u7a0b\u548c\u6570\u5b66\u6982\u5ff5\uff1a 1. \u9012\u5f52\u548c\u8fed\u4ee3\uff1a\u901a\u8fc7\u9012\u5f52\u51fd\u6570\u5b9e\u73b0\u8fed\u4ee3\u8fc7\u7a0b\u3002 2. \u6536\u655b\u6761\u4ef6\uff1a\u4f7f\u7528\u5bb9\u5dee\uff08tolerance\uff09\u6765\u5224\u65ad\u662f\u5426\u8fbe\u5230\u8db3\u591f\u7cbe\u786e\u7684\u89e3\u3002 3. \u51fd\u6570\u4f5c\u4e3a\u4e00\u7b49\u516c\u6c11(\u5373\u53ef\u4ee5\u8d4b\u503c\u3001\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u3001\u53ef\u4ee5\u88ab\u8fd4\u56de)\uff1a\u5c06\u51fd\u6570\u53ca\u5176\u5bfc\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u3002</p> <pre><code>-- \u7ebf\u6027\u65b9\u7a0b\u793a\u4f8b\ndef example1 := LinearEquation.mk 2 (-4)\n#eval printSolution example1\n\n-- \u4e8c\u6b21\u65b9\u7a0b\u793a\u4f8b\ndef quadExample := QuadraticEquation.mk 1 (-5) 6\n#eval printSolution quadExample\n\n-- \u725b\u987f\u6cd5\u793a\u4f8b\ndef sqrt2Approximation : Float :=\n  newtonMethod squareRootFunction 1.5 0.0001 20\n#eval sqrt2Approximation\n</code></pre>"},{"location":"Lean4/LeetCode/","title":"LeetCode","text":"<p>leetcode 9</p> <p><pre><code>def romanToInt (s : String) : Nat :=\n  let romanValues : Char \u2192 Nat\n    | 'I' =&gt; 1\n    | 'V' =&gt; 5\n    | 'X' =&gt; 10\n    | 'L' =&gt; 50\n    | 'C' =&gt; 100\n    | 'D' =&gt; 500\n    | 'M' =&gt; 1000\n    | _ =&gt; 0\n\n  let rec loop (chars : List Char) (total : Nat) (prevValue : Nat) : Nat :=\n    match chars with\n    | [] =&gt; total\n    | c::rest =&gt;\n      let currentValue := romanValues c\n      if currentValue &gt;= prevValue then\n        loop rest (total + currentValue) currentValue\n      else\n        loop rest (total - currentValue) currentValue\n\n  loop (s.toList.reverse) 0 0\n\n#eval romanToInt \"III\"       -- \u5e94\u8be5\u8fd4\u56de 3\n#eval romanToInt \"IV\"        -- \u5e94\u8be5\u8fd4\u56de 4\n#eval romanToInt \"IX\"        -- \u5e94\u8be5\u8fd4\u56de 9\n#eval romanToInt \"LVIII\"     -- \u5e94\u8be5\u8fd4\u56de 58\n#eval romanToInt \"MCMXCIV\"   -- \u5e94\u8be5\u8fd4\u56de 1994\n</code></pre> leetcode 14 <pre><code>partial def longestCommonPrefix (strs : List String) : String :=\n  match strs with\n  | [] =&gt; \"\"\n  | first :: rest =&gt;\n    let rec findPrefix (pre : String) (strings : List String) : String :=\n      match strings with\n      | [] =&gt; pre\n      | str :: rest' =&gt;\n        let newPre := pre.take (min pre.length str.length)\n        if str.startsWith newPre then\n          findPrefix newPre rest'\n        else if newPre.length &gt; 0 then\n          findPrefix (newPre.dropRight 1) strings\n        else\n          \"\"\n\n    findPrefix first rest\n\n#eval longestCommonPrefix [\"flower\", \"flow\", \"flight\"]  -- \u5e94\u8be5\u8fd4\u56de \"fl\"\n#eval longestCommonPrefix [\"dog\", \"racecar\", \"car\"]     -- \u5e94\u8be5\u8fd4\u56de \"\"\n#eval longestCommonPrefix []                            -- \u5e94\u8be5\u8fd4\u56de \"\"\n#eval longestCommonPrefix [\"a\"]                         -- \u5e94\u8be5\u8fd4\u56de \"a\"\n</code></pre> leetcode 20 <pre><code>def isValid (s : String) : Bool :=\n  let pair : Char \u2192 Option Char\n    | '(' =&gt; some ')'\n    | '[' =&gt; some ']'\n    | '{' =&gt; some '}'\n    | _ =&gt; none\n\n  let rec check (stack : List Char) (chars : List Char) : Bool :=\n    match chars with\n    | [] =&gt; stack.isEmpty\n    | c :: rest =&gt;\n      match pair c with\n      | some _ =&gt; check (c :: stack) rest\n      | none =&gt;\n        match stack with\n        | [] =&gt; false\n        | top :: stackRest =&gt;\n          if pair top == some c then\n            check stackRest rest\n          else\n            false\n\n  check [] s.toList\n\n#eval isValid \"()\"        -- \u5e94\u8be5\u8fd4\u56de true\n#eval isValid \"()[]{}\"    -- \u5e94\u8be5\u8fd4\u56de true\n#eval isValid \"(]\"        -- \u5e94\u8be5\u8fd4\u56de false\n#eval isValid \"([)]\"      -- \u5e94\u8be5\u8fd4\u56de false\n#eval isValid \"{[]}\"      -- \u5e94\u8be5\u8fd4\u56de true\n</code></pre> leetcode 26</p> <pre><code>partial def removeDuplicates (nums : Array Int) : Nat \u00d7 Array Int :=\n  if nums.isEmpty then\n    (0, #[])\n  else\n    let rec loop (i : Nat) (uniqueCount : Nat) (result : Array Int) :=\n      if i &gt;= nums.size then\n        (uniqueCount, result)\n      else if i = 0 || nums[i]! \u2260 nums[i-1]! then\n        loop (i+1) (uniqueCount+1) (result.push nums[i]!)\n      else\n        loop (i+1) uniqueCount result\n    loop 0 0 #[]\n\n#eval removeDuplicates #[1, 1, 2]\n#eval removeDuplicates #[0, 0, 1, 1, 1, 2, 2, 3, 3, 4]\n</code></pre>"},{"location":"docker/docker_image_container/","title":"Docker\u955c\u50cf\u90e8\u7f72\u4e0e\u53d1\u5e03","text":"\u547d\u4ee4 \u7528\u9014 <code>docker build -t &lt;image_name&gt;:&lt;tag&gt; .</code> \u6784\u5efaDocker\u955c\u50cf <code>docker run -it --rm &lt;image_name&gt;:&lt;tag&gt;</code> \u8fd0\u884cDocker\u5bb9\u5668 <code>docker tag &lt;image_name&gt;:&lt;tag&gt; &lt;username&gt;/&lt;image_name&gt;:&lt;tag&gt;</code> \u4e3a\u955c\u50cf\u6dfb\u52a0\u65b0\u6807\u7b7e <code>docker push &lt;username&gt;/&lt;image_name&gt;:&lt;tag&gt;</code> \u63a8\u9001\u955c\u50cf\u5230\u4ed3\u5e93"},{"location":"docker/docker_image_container/#1","title":"1. \u955c\u50cf\u6784\u5efa","text":"<pre><code>docker build -t lean4-mathlib:latest .\n</code></pre> <p>\u53c2\u6570\u89e3\u91ca\uff1a - <code>-t lean4-mathlib:latest</code>: \u4e3a\u6784\u5efa\u7684\u955c\u50cf\u6307\u5b9a\u540d\u79f0\u548c\u6807\u7b7e - <code>.</code>: \u6307\u5b9aDockerfile\u6240\u5728\u7684\u5f53\u524d\u76ee\u5f55\u4f5c\u4e3a\u6784\u5efa\u4e0a\u4e0b\u6587</p> <ul> <li>\u4f7f\u7528\u5f53\u524d\u76ee\u5f55\u7684Dockerfile\u6784\u5efa\u955c\u50cf</li> <li>\u6807\u8bb0\u955c\u50cf\u4e3a<code>lean4-mathlib:latest</code></li> </ul>"},{"location":"docker/docker_image_container/#2","title":"2. \u672c\u5730\u6d4b\u8bd5","text":"<pre><code>docker run -it --rm lean4-mathlib:latest\n</code></pre> <p>\u53c2\u6570\u89e3\u91ca\uff1a - <code>-it</code>: \u4ee5\u4ea4\u4e92\u6a21\u5f0f\u8fd0\u884c\u5bb9\u5668\uff0c\u5e76\u5206\u914d\u4e00\u4e2a\u4f2a\u7ec8\u7aef - <code>--rm</code>: \u5bb9\u5668\u505c\u6b62\u8fd0\u884c\u540e\u81ea\u52a8\u5220\u9664 - <code>lean4-mathlib:latest</code>: \u6307\u5b9a\u8981\u8fd0\u884c\u7684\u955c\u50cf\u540d\u79f0\u548c\u6807\u7b7e</p> <ul> <li>\u4ea4\u4e92\u5f0f\u8fd0\u884c\u5bb9\u5668</li> <li><code>--rm</code>\u9009\u9879\u786e\u4fdd\u5bb9\u5668\u505c\u6b62\u540e\u81ea\u52a8\u5220\u9664</li> </ul>"},{"location":"docker/docker_image_container/#3","title":"3. \u955c\u50cf\u63a8\u9001\uff08\u53ef\u9009\uff09","text":"<pre><code>docker tag lean4-mathlib:latest username/lean4-mathlib:latest\ndocker push username/lean4-mathlib:latest\n</code></pre> <p>\u53c2\u6570\u89e3\u91ca\uff1a - <code>docker tag</code>: \u4e3a\u955c\u50cf\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6807\u7b7e - <code>lean4-mathlib:latest</code>: \u6e90\u955c\u50cf\u540d\u79f0\u548c\u6807\u7b7e - <code>username/lean4-mathlib:latest</code>: \u76ee\u6807\u955c\u50cf\u540d\u79f0\u548c\u6807\u7b7e\uff0c\u901a\u5e38\u5305\u542bDocker Hub\u7528\u6237\u540d - <code>docker push</code>: \u5c06\u955c\u50cf\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93</p> <ul> <li>\u91cd\u65b0\u6807\u8bb0\u955c\u50cf\u4ee5\u5339\u914dDocker Hub\u4ed3\u5e93\u540d</li> <li>\u63a8\u9001\u955c\u50cf\u5230Docker Hub</li> </ul>"},{"location":"docker/dockerfile_construct/","title":"Lean4+Mathlib\u5f00\u53d1\u73af\u5883 Dockerfile \u6784\u5efa\u7ecf\u9a8c","text":""},{"location":"docker/dockerfile_construct/#1-docker","title":"1. Docker \u547d\u4ee4\u6982\u89c8","text":"\u547d\u4ee4 \u63cf\u8ff0 \u793a\u4f8b FROM \u6307\u5b9a\u57fa\u7840\u955c\u50cf <code>FROM ubuntu:22.04</code> ENV \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf <code>ENV DEBIAN_FRONTEND=noninteractive</code> RUN \u6267\u884c shell \u547d\u4ee4 <code>RUN apt-get update &amp;&amp; apt-get install -y ...</code> USER \u5207\u6362\u5f53\u524d\u7528\u6237 <code>USER leanuser</code> WORKDIR \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55 <code>WORKDIR /home/leanuser</code> CMD \u8bbe\u7f6e\u5bb9\u5668\u542f\u52a8\u65f6\u7684\u9ed8\u8ba4\u547d\u4ee4 <code>CMD [ \"bash\", \"-l\" ]</code>"},{"location":"docker/dockerfile_construct/#2","title":"2. \u6700\u4f73\u5b9e\u8df5","text":"<ol> <li>\u4f7f\u7528 <code>&amp;&amp;</code> \u8fde\u63a5\u591a\u4e2a\u547d\u4ee4\uff0c\u51cf\u5c11 RUN \u6307\u4ee4\u7684\u6570\u91cf\uff0c\u6709\u52a9\u4e8e\u51cf\u5c0f\u955c\u50cf\u5c42\u6570\u3002</li> <li>\u6e05\u7406\u4e0d\u5fc5\u8981\u7684\u6587\u4ef6\uff08\u5982 <code>apt-get clean</code>\uff09\uff0c\u51cf\u5c0f\u955c\u50cf\u5927\u5c0f\u3002</li> <li>\u4f7f\u7528\u975e root \u7528\u6237\u8fd0\u884c\u5e94\u7528\uff0c\u63d0\u9ad8\u5b89\u5168\u6027\u3002</li> <li>\u5c06\u9891\u7e41\u53d8\u52a8\u7684\u547d\u4ee4\u653e\u5728 Dockerfile \u7684\u540e\u9762\uff0c\u5229\u7528 Docker \u7684\u7f13\u5b58\u673a\u5236\u63d0\u9ad8\u6784\u5efa\u6548\u7387\u3002</li> </ol>"},{"location":"docker/dockerfile_construct/#3","title":"3. \u8be6\u7ec6\u89e3\u6790","text":"<ol> <li>\u57fa\u7840\u955c\u50cf\u9009\u62e9 (FROM) <pre><code>FROM ubuntu:22.04\n</code></pre></li> <li> <p>\u6307\u5b9a\u57fa\u7840\u955c\u50cf\uff0c\u8fd9\u91cc\u4f7f\u7528 Ubuntu 22.04 LTS \u7248\u672c\u3002</p> </li> <li> <p>\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e (ENV) <pre><code>ENV DEBIAN_FRONTEND=noninteractive\n</code></pre></p> </li> <li> <p>\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u7528\u4e8e\u914d\u7f6e\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u7684\u884c\u4e3a\u3002</p> </li> <li> <p>\u5305\u7ba1\u7406\u548c\u7cfb\u7edf\u4f9d\u8d56\u5b89\u88c5 (RUN) <pre><code>RUN apt-get update &amp;&amp; apt-get install -y ...\n</code></pre></p> </li> <li> <p>\u66f4\u65b0\u5305\u5217\u8868\u5e76\u5b89\u88c5\u5fc5\u8981\u7684\u7cfb\u7edf\u4f9d\u8d56\u3002</p> </li> <li> <p>\u7528\u6237\u521b\u5efa\u548c\u6743\u9650\u914d\u7f6e (RUN, USER) <pre><code>RUN useradd -m -s /bin/bash -G sudo leanuser\nUSER leanuser\n</code></pre></p> </li> <li>\u521b\u5efa\u975e root \u7528\u6237\u5e76\u914d\u7f6e sudo \u6743\u9650\u3002</li> <li> <p>\u5207\u6362\u5230\u65b0\u521b\u5efa\u7684\u7528\u6237\u3002</p> </li> <li> <p>\u5de5\u4f5c\u76ee\u5f55\u8bbe\u7f6e (WORKDIR) <pre><code>WORKDIR /home/leanuser\n</code></pre></p> </li> <li> <p>\u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\uff0c\u540e\u7eed\u547d\u4ee4\u5c06\u5728\u6b64\u76ee\u5f55\u4e0b\u6267\u884c\u3002</p> </li> <li> <p>Elan \u5b89\u88c5 (RUN) <pre><code>RUN curl -sSfL https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh | sh -s -- -y\n</code></pre></p> </li> <li> <p>\u4f7f\u7528\u5b98\u65b9\u811a\u672c\u5b89\u88c5 Elan\uff08Lean \u7248\u672c\u7ba1\u7406\u5668\uff09\u3002</p> </li> <li> <p>Lean \u5de5\u5177\u94fe\u5b89\u88c5 (RUN) <pre><code>RUN elan toolchain install $(cat lean-toolchain)\n</code></pre></p> </li> <li> <p>\u5b89\u88c5\u6307\u5b9a\u7248\u672c\u7684 Lean \u5de5\u5177\u94fe\u3002</p> </li> <li> <p>\u9879\u76ee\u521d\u59cb\u5316\u548c\u6784\u5efa (RUN) <pre><code>RUN lake update\nRUN lake build\n</code></pre></p> </li> <li> <p>\u4f7f\u7528 Lake \u66f4\u65b0\u9879\u76ee\u4f9d\u8d56\u5e76\u6784\u5efa\u9879\u76ee\u3002</p> </li> <li> <p>\u73af\u5883\u53d8\u91cf\u914d\u7f6e (RUN) <pre><code>RUN echo 'export LEAN_PATH=\"...\"' &gt;&gt; ~/.bashrc\n</code></pre></p> </li> <li> <p>\u914d\u7f6e Lean \u76f8\u5173\u7684\u73af\u5883\u53d8\u91cf\u3002</p> </li> <li> <p>\u9ed8\u8ba4\u542f\u52a8\u547d\u4ee4\u8bbe\u7f6e (CMD) <pre><code>CMD [ \"bash\", \"-l\" ]\n</code></pre></p> <ul> <li>\u8bbe\u7f6e\u5bb9\u5668\u542f\u52a8\u65f6\u7684\u9ed8\u8ba4\u547d\u4ee4\u3002</li> </ul> </li> </ol>"},{"location":"docker/dockerfile_construct/#4-dockerfile","title":"4. \u9644\u5f55\uff1a\u539f\u59cbDockerfile","text":"<pre><code># \u4f7f\u7528\u5b98\u65b9\u7684 Ubuntu 22.04 LTS \u4f5c\u4e3a\u57fa\u7840\u955c\u50cf\nFROM ubuntu:22.04\n\n# \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u4ee5\u907f\u514d\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4ea4\u4e92\u63d0\u793a\nENV DEBIAN_FRONTEND=noninteractive\n\n# \u66f4\u65b0\u5305\u5217\u8868\u5e76\u5b89\u88c5\u5fc5\u8981\u7684\u7cfb\u7edf\u4f9d\u8d56\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    sudo \\\n    git \\\n    curl \\\n    bash-completion \\\n    python3 \\\n    python3-requests \\\n    build-essential \\\n    libffi-dev \\\n    libssl-dev \\\n    pkg-config \\\n    &amp;&amp; apt-get clean &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# \u521b\u5efa\u4e00\u4e2a\u975e root \u7528\u6237\u4ee5\u589e\u5f3a\u5b89\u5168\u6027\nRUN useradd -m -s /bin/bash -G sudo leanuser \\\n    &amp;&amp; echo \"leanuser ALL=(ALL) NOPASSWD:ALL\" &gt;&gt; /etc/sudoers\n\n# \u5207\u6362\u5230\u975e root \u7528\u6237\nUSER leanuser\nWORKDIR /home/leanuser\n\n# \u5b89\u88c5 Elan\uff08Lean \u7248\u672c\u7ba1\u7406\u5668\uff09\nRUN curl -sSfL https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh | sh -s -- -y\n\n# \u5c06 Elan \u7684\u8def\u5f84\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\nENV PATH=\"/home/leanuser/.elan/bin:${PATH}\"\n\n# \u5b89\u88c5 Lean \u5de5\u5177\u94fe\uff08\u6839\u636e mathlib \u7684 lean-toolchain \u6587\u4ef6\uff09\nRUN curl -s https://raw.githubusercontent.com/leanprover-community/mathlib4/master/lean-toolchain -o lean-toolchain \\\n    &amp;&amp; elan toolchain install $(cat lean-toolchain) \\\n    &amp;&amp; elan default $(cat lean-toolchain)\n\n# \u9a8c\u8bc1 Lake \u5b89\u88c5\nRUN lake --version\n\n# \u624b\u52a8\u521b\u5efa Lean \u9879\u76ee\u5e76\u6dfb\u52a0 Mathlib \u4f5c\u4e3a\u4f9d\u8d56\nRUN mkdir my_project &amp;&amp; \\\n    cd my_project &amp;&amp; \\\n    echo 'import Lake\\nopen Lake DSL\\n\\npackage \u00abmy_project\u00bb where\\n  -- add package configuration options here\\n\\nrequire mathlib from git\\n  \"https://github.com/leanprover-community/mathlib4.git\"\\n\\n@[default_target]\\nlean_lib \u00abMyProject\u00bb where\\n  -- add library configuration options here' &gt; lakefile.lean\n\n# \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\u4e3a\u9879\u76ee\u76ee\u5f55\nWORKDIR /home/leanuser/my_project\n\n# \u521b\u5efa MyProject.lean \u6587\u4ef6\nRUN echo 'def hello := \"Hello from MyProject!\"' &gt; MyProject.lean\n\n# \u521d\u59cb\u5316\u9879\u76ee\u5e76\u66f4\u65b0\u4f9d\u8d56\nRUN lake update\n\n# \u6784\u5efa\u9879\u76ee\nRUN lake build\n\n# \u521b\u5efa\u6d4b\u8bd5\u6587\u4ef6\nRUN echo 'import Mathlib\\n\\ndef main : IO Unit :=\\n  IO.println s!\"Hello from Mathlib! {2 + 2}\"\\n\\n#eval main' &gt; test_mathlib.lean\n\n# \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u4ee5\u5305\u542b\u6240\u6709\u5fc5\u8981\u7684\u5e93\u8def\u5f84\nRUN echo 'export LEAN_PATH=\"$LEAN_PATH:$(find .lake/packages -name lib -type d | tr \"\\n\" \":\" | sed \"s/:$//\")\"' &gt;&gt; ~/.bashrc\n\n# \u786e\u4fdd .bashrc \u5728\u6bcf\u6b21\u542f\u52a8\u65f6\u90fd\u88ab\u52a0\u8f7d\nRUN echo 'source ~/.bashrc' &gt;&gt; ~/.profile\n\n# \u8bbe\u7f6e\u9ed8\u8ba4\u7684\u542f\u52a8\u547d\u4ee4\nCMD [ \"bash\", \"-l\" ]\n</code></pre>"},{"location":"docker/dockerfile_construct/#5-dockerfile","title":"5. \u539f\u59cbDockerfile\u8be6\u89e3","text":""},{"location":"docker/dockerfile_construct/#_1","title":"\u57fa\u7840\u955c\u50cf\u9009\u62e9","text":"<pre><code>FROM ubuntu:22.04\n</code></pre> <ul> <li>\u9009\u62e9\u5b98\u65b9 Ubuntu 22.04 LTS \u4f5c\u4e3a\u57fa\u7840\u955c\u50cf\uff0c\u786e\u4fdd\u7a33\u5b9a\u6027\u548c\u957f\u671f\u652f\u6301\u3002</li> <li>\u8003\u8651\u4f7f\u7528\u66f4\u8f7b\u91cf\u7684\u57fa\u7840\u955c\u50cf\uff08\u5982 Alpine\uff09\u53ef\u80fd\u4f1a\u5e26\u6765\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u56e0\u6b64\u9009\u62e9 Ubuntu \u662f\u5b89\u5168\u7684\u9009\u62e9\u3002</li> </ul>"},{"location":"docker/dockerfile_construct/#_2","title":"\u7cfb\u7edf\u4f9d\u8d56\u5b89\u88c5","text":"<pre><code>ENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    sudo git curl bash-completion python3 python3-requests \\\n    build-essential libffi-dev libssl-dev pkg-config \\\n    &amp;&amp; apt-get clean &amp;&amp; rm -rf /var/lib/apt/lists/*\n</code></pre> <ul> <li>\u8bbe\u7f6e <code>DEBIAN_FRONTEND=noninteractive</code> \u907f\u514d\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u7684\u4ea4\u4e92\u63d0\u793a\u3002</li> <li>\u5b89\u88c5\u5fc5\u8981\u7684\u7cfb\u7edf\u4f9d\u8d56\uff0c\u5305\u62ec\u7f16\u8bd1\u5de5\u5177\u548c Python \u73af\u5883\u3002</li> <li>\u4f7f\u7528 <code>apt-get clean</code> \u548c\u5220\u9664 <code>/var/lib/apt/lists/*</code> \u51cf\u5c0f\u955c\u50cf\u5927\u5c0f\u3002</li> </ul>"},{"location":"docker/dockerfile_construct/#_3","title":"\u7528\u6237\u5b89\u5168\u6027","text":"<pre><code>RUN useradd -m -s /bin/bash -G sudo leanuser \\\n    &amp;&amp; echo \"leanuser ALL=(ALL) NOPASSWD:ALL\" &gt;&gt; /etc/sudoers\n\nUSER leanuser\nWORKDIR /home/leanuser\n</code></pre> <ul> <li>\u521b\u5efa\u975e root \u7528\u6237 <code>leanuser</code> \u589e\u5f3a\u5b89\u5168\u6027\u3002</li> <li>\u5c06\u7528\u6237\u6dfb\u52a0\u5230 sudo \u7ec4\u5e76\u914d\u7f6e\u65e0\u5bc6\u7801 sudo \u6743\u9650\uff0c\u65b9\u4fbf\u540e\u7eed\u64cd\u4f5c\u3002</li> <li>\u5207\u6362\u5230\u975e root \u7528\u6237\uff0c\u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\u3002</li> </ul>"},{"location":"docker/dockerfile_construct/#elan","title":"Elan \u5b89\u88c5","text":"<pre><code>RUN curl -sSfL https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh | sh -s -- -y\n\nENV PATH=\"/home/leanuser/.elan/bin:${PATH}\"\n</code></pre> <ul> <li>\u4f7f\u7528\u5b98\u65b9\u811a\u672c\u5b89\u88c5 Elan\uff08Lean \u7248\u672c\u7ba1\u7406\u5668\uff09\u3002</li> <li>\u5c06 Elan \u7684\u8def\u5f84\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u786e\u4fdd\u53ef\u4ee5\u5168\u5c40\u8bbf\u95ee\u3002</li> </ul>"},{"location":"docker/dockerfile_construct/#lean","title":"Lean \u5de5\u5177\u94fe\u5b89\u88c5","text":"<pre><code>RUN curl -s https://raw.githubusercontent.com/leanprover-community/mathlib4/master/lean-toolchain -o lean-toolchain \\\n    &amp;&amp; elan toolchain install $(cat lean-toolchain) \\\n    &amp;&amp; elan default $(cat lean-toolchain)\n</code></pre> <ul> <li>\u4ece mathlib \u4ed3\u5e93\u83b7\u53d6\u6700\u65b0\u7684 <code>lean-toolchain</code> \u6587\u4ef6\u3002</li> <li>\u5b89\u88c5\u6307\u5b9a\u7248\u672c\u7684 Lean \u5de5\u5177\u94fe\u5e76\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u7248\u672c\u3002</li> </ul>"},{"location":"docker/dockerfile_construct/#_4","title":"\u9879\u76ee\u521d\u59cb\u5316","text":"<pre><code>RUN mkdir my_project &amp;&amp; cd my_project &amp;&amp; \\\n    echo 'import Lake\\nopen Lake DSL\\n\\npackage \u00abmy_project\u00bb where\\n  -- add package configuration options here\\n\\nrequire mathlib from git\\n  \"https://github.com/leanprover-community/mathlib4.git\"\\n\\n@[default_target]\\nlean_lib \u00abMyProject\u00bb where\\n  -- add library configuration options here' &gt; lakefile.lean\n\nWORKDIR /home/leanuser/my_project\n\nRUN echo 'def hello := \"Hello from MyProject!\"' &gt; MyProject.lean\n\nRUN lake update\nRUN lake build\n</code></pre> <ul> <li>\u624b\u52a8\u521b\u5efa Lean \u9879\u76ee\u7ed3\u6784\uff0c\u5305\u62ec <code>lakefile.lean</code> \u548c\u4e3b\u6587\u4ef6\u3002</li> <li>\u4f7f\u7528 <code>lake update</code> \u521d\u59cb\u5316\u9879\u76ee\u5e76\u66f4\u65b0\u4f9d\u8d56\u3002</li> <li>\u4f7f\u7528 <code>lake build</code> \u6784\u5efa\u9879\u76ee\uff0c\u786e\u4fdd\u73af\u5883\u6b63\u5e38\u3002</li> </ul>"},{"location":"docker/dockerfile_construct/#_5","title":"\u73af\u5883\u53d8\u91cf\u914d\u7f6e","text":"<pre><code>RUN echo 'export LEAN_PATH=\"$LEAN_PATH:$(find .lake/packages -name lib -type d | tr \"\\n\" \":\" | sed \"s/:$//\")\"' &gt;&gt; ~/.bashrc\nRUN echo 'source ~/.bashrc' &gt;&gt; ~/.profile\n</code></pre> <ul> <li>\u914d\u7f6e <code>LEAN_PATH</code> \u73af\u5883\u53d8\u91cf\uff0c\u5305\u542b\u6240\u6709\u5fc5\u8981\u7684\u5e93\u8def\u5f84\u3002</li> <li>\u786e\u4fdd\u6bcf\u6b21\u542f\u52a8\u5bb9\u5668\u65f6\u90fd\u52a0\u8f7d\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\u3002</li> </ul>"},{"location":"docker/dockerfile_construct/#_6","title":"\u542f\u52a8\u547d\u4ee4","text":"<pre><code>CMD [ \"bash\", \"-l\" ]\n</code></pre> <ul> <li>\u8bbe\u7f6e\u9ed8\u8ba4\u542f\u52a8\u547d\u4ee4\u4e3a\u767b\u5f55 shell\uff0c\u786e\u4fdd\u73af\u5883\u53d8\u91cf\u88ab\u6b63\u786e\u52a0\u8f7d\u3002</li> </ul>"},{"location":"docker/dockerfile_construct/#6-lean4-dockerfile","title":"6. Lean4 Dockerfile \u6784\u5efa\u7ecf\u9a8c\u603b\u7ed3","text":"<ol> <li>\u7248\u672c\u63a7\u5236\uff1a\u4f7f\u7528 <code>lean-toolchain</code> \u6587\u4ef6\u786e\u4fdd Lean \u7248\u672c\u4e0e Mathlib \u517c\u5bb9\u3002</li> <li>\u4f9d\u8d56\u7ba1\u7406\uff1a\u901a\u8fc7 Elan \u548c Lake \u7ba1\u7406 Lean \u548c\u9879\u76ee\u4f9d\u8d56\uff0c\u7b80\u5316\u7248\u672c\u63a7\u5236\u3002</li> <li>\u5b89\u5168\u6027\uff1a\u4f7f\u7528\u975e root \u7528\u6237\u8fd0\u884c\u5e94\u7528\uff0c\u63d0\u9ad8\u5bb9\u5668\u5b89\u5168\u6027\u3002</li> <li>\u73af\u5883\u53d8\u91cf\uff1a\u6b63\u786e\u914d\u7f6e <code>LEAN_PATH</code> \u786e\u4fdd\u6240\u6709\u5e93\u8def\u5f84\u53ef\u8bbf\u95ee\u3002</li> <li>\u6784\u5efa\u9a8c\u8bc1\uff1a\u5728 Dockerfile \u4e2d\u8fdb\u884c\u9879\u76ee\u6784\u5efa\uff0c\u9a8c\u8bc1\u73af\u5883\u914d\u7f6e\u6b63\u786e\u3002</li> <li>\u955c\u50cf\u4f18\u5316\uff1a\u6e05\u7406\u4e0d\u5fc5\u8981\u7684\u6587\u4ef6\uff0c\u51cf\u5c0f\u6700\u7ec8\u955c\u50cf\u5927\u5c0f\u3002</li> </ol>"}]}